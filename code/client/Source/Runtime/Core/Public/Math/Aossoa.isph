// Copyright Epic Games, Inc. All Rights Reserved.

#ifndef __AOSSOA_ISPH__
#define __AOSSOA_ISPH__

// Change layout from
// input: a0 b0 c0 d0 a1 b1 c1 d1 a2 b2 c2 d2 ...
// to
// output a0 a1 ... aX b0 b1 ... bX c0 c1 ... cX d0 d1 .. dX aX+1 ...

#if TARGET_WIDTH == 4
static const varying int vAOS20 = {0, 2, 4, 6};
static const varying int vAOS21 = {1, 3, 5, 7};
#elif TARGET_WIDTH == 8
static const varying int vAOS20 = {0, 2, 4, 6, 8, 10, 12, 14};
static const varying int vAOS21 = {1, 3, 5, 7, 9, 11, 13, 15};
#elif TARGET_WIDTH == 16
static const varying int vAOS20 = {0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30};
static const varying int vAOS21 = {1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31};
#else
#error "No implementation for this target"
#endif

#define AOS_TO_SOA2_ISPC(T)                                                                                            \
    unmasked inline void aos_to_soa2_ispc(uniform T src[], varying T *uniform v0, varying T *uniform v1)               \
    {                                                                                                                  \
        const varying T src0 = src[programIndex];                                                                      \
        const varying T src1 = src[programCount + programIndex];                                                       \
                                                                                                                       \
        *v0 = shuffle(src0, src1, vAOS20);                                                                             \
        *v1 = shuffle(src0, src1, vAOS21);                                                                             \
    }

AOS_TO_SOA2_ISPC(int16)
AOS_TO_SOA2_ISPC(int32)
AOS_TO_SOA2_ISPC(float)
AOS_TO_SOA2_ISPC(int64)
AOS_TO_SOA2_ISPC(double)


#if TARGET_WIDTH == 4
static const varying int vAOS30 = {0, 3, 1, 4};
static const varying int vAOS31 = {2, 5, 3, 6};
static const varying int vAOS32 = {0, 1, 4, 5};
static const varying int vAOS33 = {2, 3, 6, 7};
static const varying int vAOS34 = {2, 5, -1, -1};
static const varying int vAOS35 = {0, 1, 4, 7};
#elif TARGET_WIDTH == 8
static const varying int vAOS30 = {0, 3, 6, 9, 1, 4, 7, 10};
static const varying int vAOS31 = {4, 7, 10, 13, 5, 8, 11, 14};
static const varying int vAOS32 = {0, 1, 2, 3, 8, 9, 10, 11};
static const varying int vAOS33 = {4, 5, 6, 7, 12, 13, 14, 15};
static const varying int vAOS34 = {2, 5, 8, 11, 14, -1, -1, -1};
static const varying int vAOS35 = {0, 1, 2, 3, 4, 9, 12, 15};
#elif TARGET_WIDTH == 16
static const varying int vAOS30 = {0, 3, 6, 9, 12, 15, 18, 21, 1, 4, 7, 10, 13, 16, 19, 22};
static const varying int vAOS31 = {8, 11, 14, 17, 20, 23, 26, 29, 9, 12, 15, 18, 21, 24, 27, 30};
static const varying int vAOS32 = {0, 1, 2, 3, 4, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23};
static const varying int vAOS33 = {8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31};
static const varying int vAOS34 = {2, 5, 8, 11, 14, 17, 20, 23, 26, 29, -1, -1, -1, -1, -1, -1};
static const varying int vAOS35 = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 16, 19, 22, 25, 28, 31};
#else
#error "No implementation for this target"
#endif

#define AOS_TO_SOA3_ISPC(T)                                                                                            \
    unmasked inline void aos_to_soa3_ispc(uniform T src[], varying T *uniform v0, varying T *uniform v1,               \
                                        varying T *uniform v2)                                                         \
    {                                                                                                                  \
        const varying T src0 = src[programIndex];                                                                      \
        const varying T src1 = src[programCount + programIndex];                                                       \
        const varying T src2 = src[2 * programCount + programIndex];                                                   \
                                                                                                                       \
        const varying T t0 = shuffle(src0, src1, vAOS30);                                                              \
        const varying T t1 = shuffle(src1, src2, vAOS31);                                                              \
        *v0 = shuffle(t0, t1, vAOS32);                                                                                 \
        *v1 = shuffle(t0, t1, vAOS33);                                                                                 \
                                                                                                                       \
        const varying T t2 = shuffle(src0, src1, vAOS34);                                                              \
        *v2 = shuffle(t2, src2, vAOS35);                                                                               \
    }

AOS_TO_SOA3_ISPC(int16)
AOS_TO_SOA3_ISPC(int32)
AOS_TO_SOA3_ISPC(float)
AOS_TO_SOA3_ISPC(int64)
AOS_TO_SOA3_ISPC(double)


#if TARGET_WIDTH == 4
static const varying int vAOS40 = {0, 4, 1, 5};
static const varying int vAOS41 = {2, 6, 3, 7};
static const varying int vAOS42 = {0, 1, 4, 5};
static const varying int vAOS43 = {2, 3, 6, 7};
#elif TARGET_WIDTH == 8
static const varying int vAOS40 = {0, 4, 8, 12, 1, 5, 9, 13};
static const varying int vAOS41 = {2, 6, 10, 14, 3, 7, 11, 15};
static const varying int vAOS42 = {0, 1, 2, 3, 8, 9, 10, 11};
static const varying int vAOS43 = {4, 5, 6, 7, 12, 13, 14, 15};
#elif TARGET_WIDTH == 16
static const varying int vAOS40 = {0, 4, 8, 12, 16, 20, 24, 28, 1, 5, 9, 13, 17, 21, 25, 29};
static const varying int vAOS41 = {2, 6, 10, 14, 18, 22, 26, 30, 3, 7, 11, 15, 19, 23, 27, 31};
static const varying int vAOS42 = {0, 1, 2, 3, 4, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23};
static const varying int vAOS43 = {8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31};
#else
#error "No implementation for this target"
#endif

#define AOS_TO_SOA4_ISPC(T)                                                                                            \
    unmasked inline void aos_to_soa4_ispc(uniform T src[], varying T *uniform v0, varying T *uniform v1,               \
                                        varying T *uniform v2, varying T *uniform v3)                                  \
    {                                                                                                                  \
        const varying T src0 = src[programIndex];                                                                      \
        const varying T src1 = src[programCount + programIndex];                                                       \
        const varying T src2 = src[2 * programCount + programIndex];                                                   \
        const varying T src3 = src[3 * programCount + programIndex];                                                   \
                                                                                                                       \
        const varying T t0 = shuffle(src2, src3, vAOS40);                                                              \
        const varying T t1 = shuffle(src2, src3, vAOS41);                                                              \
        const varying T t2 = shuffle(src0, src1, vAOS40);                                                              \
        const varying T t3 = shuffle(src0, src1, vAOS41);                                                              \
                                                                                                                       \
        *v0 = shuffle(t2, t0, vAOS42);                                                                                 \
        *v1 = shuffle(t2, t0, vAOS43);                                                                                 \
        *v2 = shuffle(t3, t1, vAOS42);                                                                                 \
        *v3 = shuffle(t3, t1, vAOS43);                                                                                 \
    }

AOS_TO_SOA4_ISPC(int16)
AOS_TO_SOA4_ISPC(int32)
AOS_TO_SOA4_ISPC(float)
AOS_TO_SOA4_ISPC(int64)
AOS_TO_SOA4_ISPC(double)


#if TARGET_WIDTH == 4
static const varying int vAOS60 = {0, 1, 4, 5};
static const varying int vAOS61 = {2, 3, 6, 7};
static const varying int vAOS62 = {0, 6, 1, 7};
static const varying int vAOS63 = {2, 4, 3, 5};
#elif TARGET_WIDTH == 8
static const varying int vAOS60 = {0, 1, 2, 3, 8, 9, 10, 11};
static const varying int vAOS61 = {4, 5, 6, 7, 12, 13, 14, 15};
static const varying int vAOS62 = {0, 6, 12, -1, 1, 7, 13, -1};
static const varying int vAOS63 = {0, 1, 2, 10, 4, 5, 6, 11};
static const varying int vAOS64 = {2, 8, 14, -1, 3, 9, 15, -1};
static const varying int vAOS65 = {0, 1, 2, 12, 4, 5, 6, 13};
static const varying int vAOS66 = {4, 10, -1, -1, 5, 11, -1, -1};
static const varying int vAOS67 = {0, 1, 8, 14, 4, 5, 9, 15};
#elif TARGET_WIDTH == 16
static const varying int vAOS60 = {0, 1, 2, 3, 4, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23};
static const varying int vAOS61 = {8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31};
static const varying int vAOS62 = {0, 6, 12, 18, 24, 30, -1, -1, 1, 7, 13, 19, 25, 31, -1, -1};
static const varying int vAOS63 = {0, 1, 2, 3, 4, 5, 20, 26, 8, 9, 10, 11, 12, 13, 21, 27};
static const varying int vAOS64 = {2, 8, 14, 20, 26, -1, -1, 15, 3, 9, 15, 21, 27, -1, -1, 31};
static const varying int vAOS65 = {0, 1, 2, 3, 4, 16, 22, 28, 8, 9, 10, 11, 12, 17, 23, 29};
static const varying int vAOS66 = {4, 10, 16, 22, 28, -1, -1, -1, 5, 11, 17, 23, 29, -1, -1, -1};
static const varying int vAOS67 = {0, 1, 2, 3, 4, 18, 24, 30, 8, 9, 10, 11, 12, 19, 25, 31};
#else
#error "No implementation for this target"
#endif

#if TARGET_WIDTH == 4
#define AOS_TO_SOA6_ISPC(T)                                                                                            \
    inline void aos_to_soa6_ispc(uniform T src[], varying T *uniform v0, varying T *uniform v1,                        \
                                        varying T *uniform v2, varying T *uniform v3,                                  \
                                        varying T *uniform v4, varying T *uniform v5)                                  \
    {                                                                                                                  \
        const varying T src0 = src[programIndex];                                                                      \
        const varying T src1 = src[programCount + programIndex];                                                       \
        const varying T src2 = src[2 * programCount + programIndex];                                                   \
        const varying T src3 = src[3 * programCount + programIndex];                                                   \
        const varying T src4 = src[4 * programCount + programIndex];                                                   \
        const varying T src5 = src[5 * programCount + programIndex];                                                   \
                                                                                                                       \
        const varying T t0 = shuffle(src0, src1, vAOS62);                                                              \
        const varying T t1 = shuffle(src3, src4, vAOS62);                                                              \
        const varying T t2 = shuffle(src0, src2, vAOS63);                                                              \
        const varying T t3 = shuffle(src3, src5, vAOS63);                                                              \
        const varying T t4 = shuffle(src1, src2, vAOS62);                                                              \
        const varying T t5 = shuffle(src4, src5, vAOS62);                                                              \
                                                                                                                       \
        *v0 = shuffle(t0, t1, vAOS60);                                                                                 \
        *v1 = shuffle(t0, t1, vAOS61);                                                                                 \
        *v2 = shuffle(t2, t3, vAOS60);                                                                                 \
        *v3 = shuffle(t2, t3, vAOS61);                                                                                 \
        *v4 = shuffle(t4, t5, vAOS60);                                                                                 \
        *v5 = shuffle(t4, t5, vAOS61);                                                                                 \
    }
#else
#define AOS_TO_SOA6_ISPC(T)                                                                                            \
    unmasked inline void aos_to_soa6_ispc(uniform T src[], varying T *uniform v0, varying T *uniform v1,               \
                                        varying T *uniform v2, varying T *uniform v3,                                  \
                                        varying T *uniform v4, varying T *uniform v5)                                  \
    {                                                                                                                  \
        const varying T src0 = src[programIndex];                                                                      \
        const varying T src1 = src[programCount + programIndex];                                                       \
        const varying T src2 = src[2 * programCount + programIndex];                                                   \
        const varying T src3 = src[3 * programCount + programIndex];                                                   \
        const varying T src4 = src[4 * programCount + programIndex];                                                   \
        const varying T src5 = src[5 * programCount + programIndex];                                                   \
                                                                                                                       \
        const varying T t0 = shuffle(shuffle(src0, src1, vAOS62), src2, vAOS63);                                       \
        const varying T t1 = shuffle(shuffle(src3, src4, vAOS62), src5, vAOS63);                                       \
        const varying T t2 = shuffle(shuffle(src0, src1, vAOS64), src2, vAOS65);                                       \
        const varying T t3 = shuffle(shuffle(src3, src4, vAOS64), src5, vAOS65);                                       \
        const varying T t4 = shuffle(shuffle(src0, src1, vAOS66), src2, vAOS67);                                       \
        const varying T t5 = shuffle(shuffle(src3, src4, vAOS66), src5, vAOS67);                                       \
                                                                                                                       \
        *v0 = shuffle(t0, t1, vAOS60);                                                                                 \
        *v1 = shuffle(t0, t1, vAOS61);                                                                                 \
        *v2 = shuffle(t2, t3, vAOS60);                                                                                 \
        *v3 = shuffle(t2, t3, vAOS61);                                                                                 \
        *v4 = shuffle(t4, t5, vAOS60);                                                                                 \
        *v5 = shuffle(t4, t5, vAOS61);                                                                                 \
    }
#endif

AOS_TO_SOA6_ISPC(int16)
AOS_TO_SOA6_ISPC(int32)
AOS_TO_SOA6_ISPC(float)
AOS_TO_SOA6_ISPC(int64)
AOS_TO_SOA6_ISPC(double)


#endif
