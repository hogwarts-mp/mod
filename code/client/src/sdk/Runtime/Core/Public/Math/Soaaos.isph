// Copyright Epic Games, Inc. All Rights Reserved.

#ifndef __SOAAOS_ISPH__
#define __SOAAOS_ISPH__

// Change layout from
// input a0 a1 ... aX b0 b1 ... bX c0 c1 ... cX d0 d1 .. dX aX+1 ...
// to
// output: a0 b0 c0 d0 a1 b1 c1 d1 a2 b2 c2 d2 ...

#if TARGET_WIDTH == 4
static const varying int vSOA20 = {0, 4, 1, 5};
static const varying int vSOA21 = {2, 6, 3, 7};
#elif TARGET_WIDTH == 8
static const varying int vSOA20 = {0, 8, 1, 9, 2, 10, 3, 11};
static const varying int vSOA21 = {4, 12, 5, 13, 6, 14, 7, 15};
#elif TARGET_WIDTH == 16
static const varying int vSOA20 = {0, 16, 1, 17, 2, 18, 3, 19, 4, 20, 5, 21, 6, 22, 7, 23};
static const varying int vSOA21 = {8, 24, 9, 25, 10, 26, 11, 27, 12, 28, 13, 29, 14, 30, 15, 31};
#else
#error "No implementation for this target"
#endif

#define SOA_TO_AOS2_ISPC(T)                                                                                            \
    unmasked inline void soa_to_aos2_ispc(const varying T &src0, const varying T &src1, uniform T dst[])               \
    {                                                                                                                  \
        dst[programIndex] = shuffle(src0, src1, vSOA20);                                                               \
        dst[programIndex + programCount] = shuffle(src0, src1, vSOA21);                                                \
    }

SOA_TO_AOS2_ISPC(int16)
SOA_TO_AOS2_ISPC(int32)
SOA_TO_AOS2_ISPC(float)
SOA_TO_AOS2_ISPC(int64)
SOA_TO_AOS2_ISPC(double)


#if TARGET_WIDTH == 4
static const varying int vSOA30 = {0, 1, 2, 4};
static const varying int vSOA31 = {1, 2, 4, 5};
static const varying int vSOA32 = {0, 3, 6, 1};
static const varying int vSOA33 = {4, 7, 2, 5};
static const varying int vSOA34 = {3, 7, -1, -1};
static const varying int vSOA35 = {6, 0, 1, 7};
#elif TARGET_WIDTH == 8
static const varying int vSOA30 = {0, 1, 2, 3, 4, 5, 8, 9};
static const varying int vSOA31 = {2, 3, 4, 8, 9, 10, 11, 12};
static const varying int vSOA32 = {0, 6, 11, 1, 7, 12, 2, 8};
static const varying int vSOA33 = {13, 3, 9, 14, 4, 10, 15, 5};
static const varying int vSOA34 = {6, 7, 13, 14, 15, -1, -1, -1};
static const varying int vSOA35 = {2, 13, 0, 3, 14, 1, 4, 15};
#elif TARGET_WIDTH == 16
static const varying int vSOA30 = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 19, 20};
static const varying int vSOA31 = {5, 6, 7, 8, 9, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25};
static const varying int vSOA32 = {0, 11, 22, 1, 12, 23, 2, 13, 24, 3, 14, 25, 4, 15, 26, 5};
static const varying int vSOA33 = {16, 27, 6, 17, 28, 7, 18, 29, 8, 19, 30, 9, 20, 31, 10, 21};
static const varying int vSOA34 = {11, 12, 13, 14, 15, 27, 28, 29, 30, 31, -1, -1, -1, -1, -1, -1};
static const varying int vSOA35 = {26, 0, 5, 27, 1, 6, 28, 2, 7, 29, 3, 8, 30, 4, 9, 31};
#else
#error "No implementation for this target"
#endif

#define SOA_TO_AOS3_ISPC(T)                                                                                            \
    unmasked inline void soa_to_aos3_ispc(const varying T &src0, const varying T &src1,                                \
                                        const varying T &src2, uniform T dst[])                                        \
    {                                                                                                                  \
        const varying T s0 = src0;                                                                                     \
        const varying T s1 = src1;                                                                                     \
        const varying T s2 = src2;                                                                                     \
                                                                                                                       \
        const varying T t0 = shuffle(s0, s1, vSOA30);                                                                  \
        const varying T t1 = shuffle(s1, s2, vSOA31);                                                                  \
        dst[programIndex] = shuffle(t0, t1, vSOA32);                                                                   \
        dst[programCount + programIndex] = shuffle(t0, t1, vSOA33);                                                    \
                                                                                                                       \
        const varying T t2 = shuffle(s0, s1, vSOA34);                                                                  \
        dst[2 * programCount + programIndex] = shuffle(t2, s2, vSOA35);                                                \
    }

SOA_TO_AOS3_ISPC(int16)
SOA_TO_AOS3_ISPC(int32)
SOA_TO_AOS3_ISPC(float)
SOA_TO_AOS3_ISPC(int64)
SOA_TO_AOS3_ISPC(double)



#if TARGET_WIDTH == 4
static const varying int vSOA40 = {0, 2, 4, 6};
static const varying int vSOA41 = {1, 3, 5, 7};
static const varying int vSOA42 = {0, 1, 4, 5};
static const varying int vSOA43 = {2, 3, 6, 7};
#elif TARGET_WIDTH == 8
static const varying int vSOA40 = {0, 4, 8, 12, 1, 5, 9, 13};
static const varying int vSOA41 = {2, 6, 10, 14, 3, 7, 11, 15};
static const varying int vSOA42 = {0, 1, 2, 3, 8, 9, 10, 11};
static const varying int vSOA43 = {4, 5, 6, 7, 12, 13, 14, 15};
#elif TARGET_WIDTH == 16
static const varying int vSOA40 = {0, 8, 16, 24, 1, 9, 17, 25, 2, 10, 18, 26, 3, 11, 19, 27};
static const varying int vSOA41 = {4, 12, 20, 28, 5, 13, 21, 29, 6, 14, 22, 30, 7, 15, 23, 31};
static const varying int vSOA42 = {0, 1, 2, 3, 4, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23};
static const varying int vSOA43 = {8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31};
#else
#error "No implementation for this target"
#endif

#define SOA_TO_AOS4_ISPC(T)                                                                                            \
    unmasked inline void soa_to_aos4_ispc(const varying T &src0, const varying T &src1,                                \
                                        const varying T &src2, const varying T &src3, uniform T dst[])                 \
    {                                                                                                                  \
        const varying T t0 = shuffle(src0, src1, vSOA42);                                                              \
        const varying T t1 = shuffle(src2, src3, vSOA42);                                                              \
        const varying T t2 = shuffle(src0, src1, vSOA43);                                                              \
        const varying T t3 = shuffle(src2, src3, vSOA43);                                                              \
                                                                                                                       \
        dst[programIndex] = shuffle(t0, t1, vSOA40);                                                                   \
        dst[programCount + programIndex] = shuffle(t0, t1, vSOA41);                                                    \
        dst[2 * programCount + programIndex] = shuffle(t2, t3, vSOA40);                                                \
        dst[3 * programCount + programIndex] = shuffle(t2, t3, vSOA41);                                                \
    }

SOA_TO_AOS4_ISPC(int16)
SOA_TO_AOS4_ISPC(int32)
SOA_TO_AOS4_ISPC(float)
SOA_TO_AOS4_ISPC(int64)
SOA_TO_AOS4_ISPC(double)


#if TARGET_WIDTH == 4
static const varying int vSOA60 = {0, 1, 4, 5};
static const varying int vSOA61 = {2, 3, 6, 7};
static const varying int vSOA62 = {0, 2, 4, 6};
static const varying int vSOA63 = {1, 3, 4, 7};
static const varying int vSOA64 = {0, 2, 5, 7};
#elif TARGET_WIDTH == 8
static const varying int vSOA60 = {0, 1, 2, 3, 8, 9, 10, 11};
static const varying int vSOA61 = {4, 5, 6, 7, 12, 13, 14, 15};
static const varying int vSOA62 = {0, 4, 8, 12, -1, -1, 1, 5};
static const varying int vSOA63 = {0, 1, 2, 3, 8, 12, 6, 7};
static const varying int vSOA64 = {9, 13, -1, -1, 2, 6, 10, 14};
static const varying int vSOA65 = {0, 1, 9, 13, 4, 5, 6, 7};
static const varying int vSOA66 = {-1, -1, 3, 7, 11, 15, -1, -1};
static const varying int vSOA67 = {10, 14, 2, 3, 4, 5, 11, 15};
#elif TARGET_WIDTH == 16
static const varying int vSOA60 = {0, 1, 2, 3, 4, 5, 6, 7, 16, 17, 18, 19, 20, 21, 22, 23};
static const varying int vSOA61 = {8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27, 28, 29, 30, 31};
static const varying int vSOA62 = {0, 8, 16, 24, -1, -1, 1, 9, 17, 25, -1, -1, 2, 10, 18, 26};
static const varying int vSOA63 = {0, 1, 2, 3, 16, 24, 6, 7, 8, 9, 17, 25, 12, 13, 14, 15};
static const varying int vSOA64 = {-1, -1, 3, 11, 19, 27, -1, -1, 4, 12, 20, 28, -1, -1, 5, 13};
static const varying int vSOA65 = {18, 26, 2, 3, 4, 5, 19, 27, 8, 9, 10, 11, 20, 28, 14, 15};
static const varying int vSOA66 = {21, 29, -1, -1, 6, 14, 22, 30, -1, -1, 7, 15, 23, 31, -1, -1};
static const varying int vSOA67 = {0, 1, 21, 29, 4, 5, 6, 7, 22, 30, 10, 11, 12, 13, 23, 31};
#else
#error "No implementation for this target"
#endif

#if TARGET_WIDTH == 4
#define SOA_TO_AOS6_ISPC(T)                                                                                            \
    unmasked inline void soa_to_aos6_ispc(const varying T &src0, const varying T &src1,                                \
                                        const varying T &src2, const varying T &src3,                                  \
                                        const varying T &src4, const varying T &src5, uniform T dst[])                 \
    {                                                                                                                  \
        const varying T t0 = shuffle(src0, src1, vSOA60);                                                              \
        const varying T t1 = shuffle(src0, src1, vSOA61);                                                              \
        const varying T t2 = shuffle(src2, src3, vSOA60);                                                              \
        const varying T t3 = shuffle(src2, src3, vSOA61);                                                              \
        const varying T t4 = shuffle(src4, src5, vSOA60);                                                              \
        const varying T t5 = shuffle(src4, src5, vSOA61);                                                              \
                                                                                                                       \
        dst[programIndex] = shuffle(t0, t2, vSOA62);                                                                   \
        dst[programIndex + programCount] = shuffle(t4, t0, vSOA62);                                                    \
        dst[2 * programCount + programIndex] = shuffle(t2, t4, vSOA63);                                                \
        dst[3 * programCount + programIndex] = shuffle(t1, t3, vSOA62);                                                \
        dst[4 * programCount + programIndex] = shuffle(t5, t1, vSOA64);                                                \
        dst[5 * programCount + programIndex] = shuffle(t3, t5, vSOA63);                                                \
    }
#else
#define SOA_TO_AOS6_ISPC(T)                                                                                            \
    unmasked inline void soa_to_aos6_ispc(const varying T &src0, const varying T &src1,                                \
                                        const varying T &src2, const varying T &src3,                                  \
                                        const varying T &src4, const varying T &src5, uniform T dst[])                 \
    {                                                                                                                  \
        const varying T t0 = shuffle(src0, src1, vSOA60);                                                              \
        const varying T t1 = shuffle(src0, src1, vSOA61);                                                              \
        const varying T t2 = shuffle(src2, src3, vSOA60);                                                              \
        const varying T t3 = shuffle(src2, src3, vSOA61);                                                              \
        const varying T t4 = shuffle(src4, src5, vSOA60);                                                              \
        const varying T t5 = shuffle(src4, src5, vSOA61);                                                              \
                                                                                                                       \
        dst[programIndex] = shuffle(shuffle(t0, t2, vSOA62), t4, vSOA63);                                              \
        dst[programIndex + programCount] = shuffle(shuffle(t0, t2, vSOA64), t4, vSOA65);                               \
        dst[2 * programCount + programIndex] = shuffle(shuffle(t0, t2, vSOA66), t4, vSOA67);                           \
        dst[3 * programCount + programIndex] = shuffle(shuffle(t1, t3, vSOA62), t5, vSOA63);                           \
        dst[4 * programCount + programIndex] = shuffle(shuffle(t1, t3, vSOA64), t5, vSOA65);                           \
        dst[5 * programCount + programIndex] = shuffle(shuffle(t1, t3, vSOA66), t5, vSOA67);                           \
    }
#endif

SOA_TO_AOS6_ISPC(int16)
SOA_TO_AOS6_ISPC(int32)
SOA_TO_AOS6_ISPC(float)
SOA_TO_AOS6_ISPC(int64)
SOA_TO_AOS6_ISPC(double)


#endif
