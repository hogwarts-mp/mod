// Copyright Epic Games, Inc. All Rights Reserved.


#include "Math/Sobol.h"

float FSobol::Evaluate(int32 Index, int32 Dim, int32 Seed)
{
	check(Dim >= 0 && Dim <= MaxDimension);
	int32 Result = Seed & 0xffffff;
	for (int i = 0; i < 32; ++i, Index >>= 1) {
		Result ^= (Index & 1) * DirectionNumbers[Dim][i];
	}
	return float(Result) * 5.96046448e-08f;	// 2^-24
}

float FSobol::Next(int32 Index, int32 Dim, float Value)
{
	if (Index == 0)
	{
		return Value;
	}

	check(Dim >= 0 && Dim <= MaxDimension);
	int32 Result = FMath::FloorToInt(Value * 0x1000000) & 0xffffff;
	int32 ChangedBit = FMath::CountTrailingZeros(Index) & 31;
	Result ^= GrayNumbers[Dim][ChangedBit];
	return float(Result) * 5.96046448e-08f;	// 2^-24
}

FVector2D FSobol::Evaluate(int32 Index, int32 CellBits, FIntPoint Cell, FIntPoint Seed)
{
	check(CellBits >= 0 && CellBits <= MaxCell2DBits);
	int32 CellMask = (1 << CellBits) - 1;
	Cell = FIntPoint(Cell.X & CellMask, Cell.Y & CellMask);
	FIntPoint Result = FIntPoint((Seed.X & 0xffffff) >> CellBits, (Seed.Y & 0xffffff) >> CellBits);

	for (int i = 0;  (i < CellBits) && (Cell.X != 0);  ++i, Cell.X >>= 1)
	{
		Result.X ^= (Cell.X & 1) * Cell2DDirectionNumbers[CellBits][i][0];
		Result.Y ^= (Cell.X & 1) * Cell2DDirectionNumbers[CellBits][i][1];
	}
	for (int i = CellBits;  (i < 2*CellBits) && (Cell.Y != 0);  ++i, Cell.Y >>= 1)
	{
		Result.X ^= (Cell.Y & 1) * Cell2DDirectionNumbers[CellBits][i][0];
		Result.Y ^= (Cell.Y & 1) * Cell2DDirectionNumbers[CellBits][i][1];
	}
	for (int i = 2*CellBits;  (i < 32) && (Index != 0);  ++i, Index >>= 1)
	{
		Result.X ^= (Index & 1) * Cell2DDirectionNumbers[CellBits][i][0];
		Result.Y ^= (Index & 1) * Cell2DDirectionNumbers[CellBits][i][1];
	}

	return FVector2D(Result) / float(1 << (24 - CellBits));
}

FVector2D FSobol::Next(int32 Index, int32 CellBits, FVector2D Value)
{
	if (Index == 0)
	{
		return Value;
	}

	check(CellBits >= 0 && CellBits <= MaxCell2DBits);
	int32 ChangedBit = FMath::CountTrailingZeros(Index) & 31;
	float CellScale = float(1 << (24 - CellBits));

	FIntPoint Result = FIntPoint(int32(Value.X * CellScale) & 0xffffff, int32(Value.Y * CellScale) & 0xffffff);
	Result.X ^= Cell2DGrayNumbers[CellBits][ChangedBit][0];
	Result.Y ^= Cell2DGrayNumbers[CellBits][ChangedBit][1];
	return FVector2D(Result) / CellScale;
}


FVector FSobol::Evaluate(int32 Index, int32 CellBits, FIntVector Cell, FIntVector Seed)
{
	check(CellBits >= 0 && CellBits <= MaxCell2DBits);
	int32 CellMask = (1 << CellBits) - 1;
	Cell = FIntVector(Cell.X & CellMask, Cell.Y & CellMask, Cell.Z & CellMask);
	FIntVector Result = FIntVector((Seed.X & 0xffffff) >> CellBits, (Seed.Y & 0xffffff) >> CellBits, (Seed.Z & 0xffffff) >> CellBits);

	for (int i = 0;  (i < CellBits) && (Cell.X != 0);  ++i, Cell.X >>= 1)
	{
		Result.X ^= (Cell.X & 1) * Cell3DDirectionNumbers[CellBits][i][0];
		Result.Y ^= (Cell.X & 1) * Cell3DDirectionNumbers[CellBits][i][1];
		Result.Z ^= (Cell.X & 1) * Cell3DDirectionNumbers[CellBits][i][2];
	}
	for (int i = CellBits;  (i < 2*CellBits) && (Cell.Y != 0);  ++i, Cell.Y >>= 1)
	{
		Result.X ^= (Cell.Y & 1) * Cell3DDirectionNumbers[CellBits][i][0];
		Result.Y ^= (Cell.Y & 1) * Cell3DDirectionNumbers[CellBits][i][1];
		Result.Z ^= (Cell.Y & 1) * Cell3DDirectionNumbers[CellBits][i][2];
	}
	for (int i = 2*CellBits;  (i < 3*CellBits) && (Cell.Z != 0);  ++i, Cell.Z >>= 1)
	{
		Result.X ^= (Cell.Z & 1) * Cell3DDirectionNumbers[CellBits][i][0];
		Result.Y ^= (Cell.Z & 1) * Cell3DDirectionNumbers[CellBits][i][1];
		Result.Z ^= (Cell.Z & 1) * Cell3DDirectionNumbers[CellBits][i][2];
	}
	for (int i = 3*CellBits;  (i < 32) && (Index != 0);  ++i, Index >>= 1)
	{
		Result.X ^= (Index & 1) * Cell3DDirectionNumbers[CellBits][i][0];
		Result.Y ^= (Index & 1) * Cell3DDirectionNumbers[CellBits][i][1];
		Result.Z ^= (Index & 1) * Cell3DDirectionNumbers[CellBits][i][2];
	}

	return FVector(Result) / float(1 << (24 - CellBits));
}

FVector FSobol::Next(int32 Index, int32 CellBits, FVector Value)
{
	if (Index == 0)
	{
		return Value;
	}

	check(CellBits >= 0 && CellBits <= MaxCell2DBits);
	int32 ChangedBit = FMath::CountTrailingZeros(Index) & 31;
	float CellScale = float(1 << (24 - CellBits));

	FIntVector Result = FIntVector(int32(Value.X * CellScale) & 0xffffff, int32(Value.Y * CellScale) & 0xffffff, int32(Value.Z * CellScale) & 0xffffff);
	Result.X ^= Cell3DGrayNumbers[CellBits][ChangedBit][0];
	Result.Y ^= Cell3DGrayNumbers[CellBits][ChangedBit][1];
	Result.Z ^= Cell3DGrayNumbers[CellBits][ChangedBit][2];
	return FVector(Result) / CellScale;
}

// Sobol direction number table
const int32 FSobol::DirectionNumbers[FSobol::MaxDimension + 1][32] = {
	{ 0x000001, 0x000002, 0x000004, 0x000008, 0x000010, 0x000020, 0x000040, 0x000080, 0x000100, 0x000200, 0x000400, 0x000800, 0x001000, 0x002000, 0x004000, 0x008000, 0x010000, 0x020000, 0x040000, 0x080000, 0x100000, 0x200000, 0x400000, 0x800000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000 },
	{ 0x800000, 0x400000, 0x200000, 0x100000, 0x080000, 0x040000, 0x020000, 0x010000, 0x008000, 0x004000, 0x002000, 0x001000, 0x000800, 0x000400, 0x000200, 0x000100, 0x000080, 0x000040, 0x000020, 0x000010, 0x000008, 0x000004, 0x000002, 0x000001, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000 },
	{ 0x800000, 0xc00000, 0xa00000, 0xf00000, 0x880000, 0xcc0000, 0xaa0000, 0xff0000, 0x808000, 0xc0c000, 0xa0a000, 0xf0f000, 0x888800, 0xcccc00, 0xaaaa00, 0xffff00, 0x800080, 0xc000c0, 0xa000a0, 0xf000f0, 0x880088, 0xcc00cc, 0xaa00aa, 0xff00ff, 0x808080, 0xc0c0c0, 0xa0a0a0, 0xf0f0f0, 0x888888, 0xcccccc, 0xaaaaaa, 0xffffff },
	{ 0x800000, 0xc00000, 0x600000, 0x900000, 0xe80000, 0x5c0000, 0x8e0000, 0xc50000, 0x688000, 0x9cc000, 0xee6000, 0x559000, 0x806800, 0xc09c00, 0x60ee00, 0x905500, 0xe88080, 0x5cc0c0, 0x8e6060, 0xc59090, 0x6868e8, 0x9c9c5c, 0xeeee8e, 0x5555c5, 0x8000e8, 0xc0005c, 0x60008e, 0x9000c5, 0xe80068, 0x5c009c, 0x8e00ee, 0xc50055 },
	{ 0x800000, 0xc00000, 0x200000, 0x500000, 0xf80000, 0x740000, 0xa20000, 0x930000, 0xd88000, 0x254000, 0x59e000, 0xe6d000, 0x780800, 0xb40c00, 0x820200, 0xc30500, 0x208f80, 0x514740, 0xfbea20, 0x75d930, 0xa08588, 0x914e54, 0xdbe79e, 0x25db6d, 0x588000, 0xe54000, 0x79e000, 0xb6d000, 0x800800, 0xc00c00, 0x200200, 0x500500 },
	{ 0x800000, 0x400000, 0x200000, 0xb00000, 0xf80000, 0xdc0000, 0x7a0000, 0x9d0000, 0x5a8000, 0x2fc000, 0xa16000, 0xf0b000, 0xda8800, 0x6fc400, 0x816200, 0x40bb00, 0x228780, 0xb3c9c0, 0xfb65a0, 0xddb2d0, 0x780228, 0x9c0b3c, 0x5a0fb6, 0x2d0ddb, 0xa28780, 0xf3c9c0, 0xdb65a0, 0x6db2d0, 0x800228, 0x400b3c, 0x200fb6, 0xb00ddb },
	{ 0x800000, 0x400000, 0x600000, 0x300000, 0xc80000, 0x240000, 0x560000, 0xfb0000, 0xe08000, 0x704000, 0xa86000, 0x143000, 0x9ec800, 0xdf2400, 0xb6d600, 0x8bbb00, 0x480080, 0x640040, 0x360060, 0xcb0030, 0x2880c8, 0x544024, 0xfe6056, 0xef30fb, 0x7e48e0, 0xaf6470, 0x1eb6a8, 0x9f8b14, 0xd6c81e, 0xbb249f, 0x80d6d6, 0x40bbbb },
	{ 0x800000, 0xc00000, 0xa00000, 0xd00000, 0x580000, 0x940000, 0x3e0000, 0xe30000, 0xbe8000, 0x23c000, 0x1e2000, 0xf31000, 0x467800, 0x678400, 0x784600, 0x846700, 0xc67880, 0xa784c0, 0xd846a0, 0x5467d0, 0x9e78d8, 0x338454, 0xe6469e, 0xb76733, 0x20f866, 0x104477, 0xf86680, 0x4477c0, 0x668020, 0x77c010, 0x8020f8, 0xc01044 },
	{ 0x800000, 0x400000, 0xa00000, 0x500000, 0x880000, 0x240000, 0x120000, 0x2d0000, 0x768000, 0x9e4000, 0x082000, 0x641000, 0xb22800, 0x7d1400, 0xfea200, 0xba4900, 0x1a2480, 0x491b40, 0xc4b5a0, 0xe37390, 0xf68008, 0xde4004, 0xa8200a, 0x341005, 0x3a2808, 0x591402, 0xeca201, 0x974902, 0x6ca487, 0xd75b49, 0xcc95a0, 0x876396 },
	{ 0x800000, 0x400000, 0xa00000, 0x500000, 0x280000, 0xd40000, 0x6a0000, 0x710000, 0x388000, 0x584000, 0xea2000, 0x311000, 0x98a800, 0x085400, 0xc22a00, 0xe52500, 0xf2b280, 0x794840, 0xfaa420, 0xbd7310, 0x18a808, 0x485404, 0x622a0a, 0xb52505, 0xdab282, 0xad484d, 0x90a426, 0xcc7317, 0x20280b, 0x101401, 0x880a04, 0x843506 },
	{ 0x800000, 0x400000, 0xe00000, 0xb00000, 0x980000, 0x940000, 0x8a0000, 0x5b0000, 0x338000, 0xd9c000, 0x722000, 0x3f1000, 0xc1b800, 0xa6ec00, 0x538600, 0x29f500, 0x0a3a80, 0x1b2ac0, 0xd392e0, 0x69ff70, 0xea3808, 0xab2c04, 0x4ba60e, 0xfde50b, 0x600289, 0xf006c9, 0x7834e8, 0x241a75, 0x123a8b, 0xcf2ac9, 0xb992e9, 0x82ff78 },
	{ 0x800000, 0x400000, 0xa00000, 0x100000, 0x080000, 0x6c0000, 0x9e0000, 0x230000, 0x578000, 0xadc000, 0x7fa000, 0x91d000, 0x498800, 0xced400, 0x880a00, 0x2c0f00, 0x3e0d80, 0x3317c0, 0x5fb060, 0xc1f8b0, 0xe18d88, 0xb2d7c4, 0x1e106a, 0x6328b1, 0xf78588, 0xbdc3c2, 0x77ba63, 0xfdf7b3, 0xd7800d, 0xedc008, 0xdfa004, 0x81d00a },
	{ 0x800000, 0x400000, 0x200000, 0x300000, 0x580000, 0xac0000, 0x960000, 0x2b0000, 0xd48000, 0x094000, 0xe2a000, 0x525000, 0x4e2800, 0xc71c00, 0x629e00, 0x126700, 0x6e1380, 0xf731c0, 0x3a98a0, 0xbe4490, 0xf83b88, 0xdc2dc4, 0xee06a2, 0xb72393, 0x1aa80d, 0x8e5c0e, 0xa03e0b, 0x703701, 0x783b88, 0x9c2dca, 0xce06a7, 0x872397 },
	{ 0x800000, 0xc00000, 0xa00000, 0x500000, 0xf80000, 0x8c0000, 0xe20000, 0x330000, 0x0f8000, 0x214000, 0x95a000, 0x5e7000, 0xd80800, 0x1c2400, 0xba1600, 0xef3700, 0x158680, 0x9e6fc0, 0x781b60, 0x4c3490, 0x420e88, 0x630bcc, 0xf7ad6a, 0xad7395, 0x778007, 0x6d4004, 0xd7a004, 0x3d7006, 0x2f880f, 0xb1640a, 0xcdb607, 0x824706 },
	{ 0x800000, 0xc00000, 0x600000, 0x900000, 0x380000, 0xc40000, 0x420000, 0xa30000, 0xf18000, 0xaa4000, 0xfce000, 0x851000, 0xe00800, 0x500c00, 0x580600, 0x540900, 0x7a0380, 0x670c40, 0xb38420, 0x094a30, 0x0d6f18, 0x2f5aa4, 0x1ce7ce, 0xd51451, 0xb80000, 0x040000, 0x220000, 0x330000, 0xc98000, 0x6e4000, 0xbee000, 0x261000 },
	{ 0x800000, 0x400000, 0x200000, 0xf00000, 0xa80000, 0x540000, 0x9a0000, 0x9d0000, 0x1e8000, 0x5cc000, 0x7d2000, 0x8d1000, 0x248800, 0x71c400, 0xeba200, 0x75df00, 0x6ba280, 0x35d140, 0x4ba3a0, 0xc5d2d0, 0xe3a168, 0x91db8c, 0x79aef2, 0x0cdf41, 0x672a80, 0x501540, 0x1a01a0, 0xdd0dd0, 0x3e83e8, 0xaccacc, 0xd52d52, 0xd91d91 }
};

const int32 FSobol::GrayNumbers[FSobol::MaxDimension + 1][32] = {
	{ 0x000001, 0x000003, 0x000007, 0x00000f, 0x00001f, 0x00003f, 0x00007f, 0x0000ff, 0x0001ff, 0x0003ff, 0x0007ff, 0x000fff, 0x001fff, 0x003fff, 0x007fff, 0x00ffff, 0x01ffff, 0x03ffff, 0x07ffff, 0x0fffff, 0x1fffff, 0x3fffff, 0x7fffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff },
	{ 0x800000, 0xc00000, 0xe00000, 0xf00000, 0xf80000, 0xfc0000, 0xfe0000, 0xff0000, 0xff8000, 0xffc000, 0xffe000, 0xfff000, 0xfff800, 0xfffc00, 0xfffe00, 0xffff00, 0xffff80, 0xffffc0, 0xffffe0, 0xfffff0, 0xfffff8, 0xfffffc, 0xfffffe, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff, 0xffffff },
	{ 0x800000, 0x400000, 0xe00000, 0x100000, 0x980000, 0x540000, 0xfe0000, 0x010000, 0x818000, 0x414000, 0xe1e000, 0x111000, 0x999800, 0x555400, 0xfffe00, 0x000100, 0x800180, 0x400140, 0xe001e0, 0x100110, 0x980198, 0x540154, 0xfe01fe, 0x010101, 0x818181, 0x414141, 0xe1e1e1, 0x111111, 0x999999, 0x555555, 0xffffff, 0x000000 },
	{ 0x800000, 0x400000, 0x200000, 0xb00000, 0x580000, 0x040000, 0x8a0000, 0x4f0000, 0x278000, 0xbb4000, 0x552000, 0x00b000, 0x80d800, 0x404400, 0x20aa00, 0xb0ff00, 0x587f80, 0x04bf40, 0x8adf20, 0x4f4fb0, 0x272758, 0xbbbb04, 0x55558a, 0x00004f, 0x8000a7, 0x4000fb, 0x200075, 0xb000b0, 0x5800d8, 0x040044, 0x8a00aa, 0x4f00ff },
	{ 0x800000, 0x400000, 0x600000, 0x300000, 0xc80000, 0xbc0000, 0x1e0000, 0x8d0000, 0x558000, 0x70c000, 0x292000, 0xcff000, 0xb7f800, 0x03f400, 0x81f600, 0x42f300, 0x627c80, 0x333bc0, 0xc8d1e0, 0xbd08d0, 0x1d8d58, 0x8cc30c, 0x572492, 0x72ffff, 0x2a7fff, 0xcf3fff, 0xb6dfff, 0x000fff, 0x8007ff, 0x400bff, 0x6009ff, 0x300cff },
	{ 0x800000, 0xc00000, 0xe00000, 0x500000, 0xa80000, 0x740000, 0x0e0000, 0x930000, 0xc98000, 0xe64000, 0x472000, 0xb79000, 0x6d1800, 0x02dc00, 0x83be00, 0xc30500, 0xe18280, 0x524b40, 0xa92ee0, 0x749c30, 0x0c9e18, 0x909524, 0xca9a92, 0xe79749, 0x4510c9, 0xb6d909, 0x6dbca9, 0x000e79, 0x800c51, 0xc0076d, 0xe008db, 0x500500 },
	{ 0x800000, 0xc00000, 0xa00000, 0x900000, 0x580000, 0x7c0000, 0x2a0000, 0xd10000, 0x318000, 0x41c000, 0xe9a000, 0xfd9000, 0x635800, 0xbc7c00, 0x0aaa00, 0x811100, 0xc91180, 0xad11c0, 0x9b11a0, 0x501190, 0x789158, 0x2cd17c, 0xd2b12a, 0x3d81d1, 0x43c931, 0xecad41, 0xf21be9, 0x6d90fd, 0xbb58e3, 0x007c7c, 0x80aaaa, 0xc01111 },
	{ 0x800000, 0x400000, 0xe00000, 0x300000, 0x680000, 0xfc0000, 0xc20000, 0x210000, 0x9f8000, 0xbc4000, 0xa26000, 0x517000, 0x170800, 0x708c00, 0x08ca00, 0x8cad00, 0x4ad580, 0xed5140, 0x3517e0, 0x617030, 0xff08e8, 0xcc8cbc, 0x2aca22, 0x9dad11, 0xbd5577, 0xad1100, 0x557780, 0x110040, 0x778060, 0x004070, 0x806088, 0x4070cc },
	{ 0x800000, 0xc00000, 0x600000, 0x300000, 0xb80000, 0x9c0000, 0x8e0000, 0xa30000, 0xd58000, 0x4bc000, 0x43e000, 0x27f000, 0x95d800, 0xe8cc00, 0x166e00, 0xac2700, 0xb60380, 0xff18c0, 0x3bad60, 0xd8def0, 0x2e5ef8, 0xf01efc, 0x583ef6, 0x6c2ef3, 0x5606fb, 0x0f12f9, 0xe3b0f8, 0x74f9fa, 0x185d7d, 0xcf0634, 0x039394, 0x84f002 },
	{ 0x800000, 0xc00000, 0x600000, 0x300000, 0x180000, 0xcc0000, 0xa60000, 0xd70000, 0xef8000, 0xb7c000, 0x5de000, 0x6cf000, 0xf45800, 0xfc0c00, 0x3e2600, 0xdb0300, 0x29b180, 0x50f9c0, 0xaa5de0, 0x172ef0, 0x0f86f8, 0x47d2fc, 0x25f8f6, 0x90ddf3, 0x4a6f71, 0xe7273c, 0x77831a, 0xbbf00d, 0x9bd806, 0x8bcc07, 0x03c603, 0x87f305 },
	{ 0x800000, 0xc00000, 0x200000, 0x900000, 0x080000, 0x9c0000, 0x160000, 0x4d0000, 0x7e8000, 0xa74000, 0xd56000, 0xea7000, 0x2bc800, 0x8d2400, 0xdea200, 0xf75700, 0xfd6d80, 0xe64740, 0x35d5a0, 0x5c2ad0, 0xb612d8, 0x1d3edc, 0x5698d2, 0xab7dd9, 0xcb7f50, 0x3b7999, 0x434d71, 0x675704, 0x756d8f, 0xba4746, 0x03d5af, 0x812ad7 },
	{ 0x800000, 0xc00000, 0x600000, 0x700000, 0x780000, 0x140000, 0x8a0000, 0xa90000, 0xfe8000, 0x534000, 0x2ce000, 0xbd3000, 0xf4b800, 0x3a6c00, 0xb26600, 0x9e6900, 0xa06480, 0x937340, 0xccc320, 0x0d3b90, 0xecb618, 0x5e61dc, 0x4071b6, 0x235907, 0xd4dc8f, 0x691f4d, 0x1ea52e, 0xe3529d, 0x34d290, 0xd91298, 0x06b29c, 0x876296 },
	{ 0x800000, 0xc00000, 0xe00000, 0xd00000, 0x880000, 0x240000, 0xb20000, 0x990000, 0x4d8000, 0x44c000, 0xa66000, 0xf43000, 0xba1800, 0x7d0400, 0x1f9a00, 0x0dfd00, 0x63ee80, 0x94df40, 0xae47e0, 0x100370, 0xe838f8, 0x34153c, 0xda139e, 0x6d300d, 0x779800, 0xf9c40e, 0x59fa05, 0x29cd04, 0x51f68c, 0xcddb46, 0x03dde1, 0x84fe76 },
	{ 0x800000, 0x400000, 0xe00000, 0xb00000, 0x480000, 0xc40000, 0x260000, 0x150000, 0x1a8000, 0x3bc000, 0xae6000, 0xf01000, 0x281800, 0x343c00, 0x8e2a00, 0x611d00, 0x749b80, 0xeaf440, 0x92ef20, 0xdedbb0, 0x9cd538, 0xffdef4, 0x08739e, 0xa5000b, 0xd2800c, 0xbfc008, 0x68600c, 0x55100a, 0x7a9805, 0xcbfc0f, 0x064a08, 0x840d0e },
	{ 0x800000, 0x400000, 0x200000, 0xb00000, 0x880000, 0x4c0000, 0x0e0000, 0xad0000, 0x5c8000, 0xf6c000, 0x0a2000, 0x8f3000, 0x6f3800, 0x3f3400, 0x673200, 0x333b00, 0x493880, 0x2e34c0, 0x9db0e0, 0x94fad0, 0x9995c8, 0xb6cf6c, 0xaa28a2, 0x7f3cf3, 0xc73cf3, 0xc33cf3, 0xe13cf3, 0xd23cf3, 0x1bbcf3, 0x75fcf3, 0xcb1cf3, 0xed0cf3 },
	{ 0x800000, 0xc00000, 0xe00000, 0x100000, 0xb80000, 0xec0000, 0x760000, 0xeb0000, 0xf58000, 0xa94000, 0xd46000, 0x597000, 0x7df800, 0x0c3c00, 0xe79e00, 0x924100, 0xf9e380, 0xcc32c0, 0x879160, 0x4243b0, 0xa1e2d8, 0x303954, 0x4997a6, 0x4548e7, 0x226267, 0x727727, 0x687687, 0xb57b57, 0x8bf8bf, 0x273273, 0xf21f21, 0x2b02b0 }
};

const int32 FSobol::Cell2DDirectionNumbers[FSobol::MaxCell2DBits + 1][32][2] = {
	{ {0x800000, 0x800000}, {0x200000, 0xa00000}, {0x400000, 0x400000}, {0x100000, 0x500000}, {0x040000, 0xd40000}, {0x080000, 0x280000}, {0x020000, 0x6a0000}, {0x010000, 0x710000}, {0x008000, 0x388000}, {0x004000, 0x584000}, {0x002000, 0xea2000}, {0x000100, 0xe52500}, {0x001000, 0x311000}, {0x000800, 0x98a800}, {0x000400, 0x085400}, {0x000200, 0xc22a00}, {0x000080, 0xf2b280}, {0x000040, 0x794840}, {0x000020, 0xfaa420}, {0x000010, 0xbd7310}, {0x000008, 0x18a808}, {0x000002, 0x622a0a}, {0x000004, 0x485404}, {0x000000, 0xdab282}, {0x000000, 0xad484d}, {0x000000, 0xcc7317}, {0x000001, 0xb52505}, {0x000000, 0x90a426}, {0x000000, 0x20280b}, {0x000000, 0x101401}, {0x000000, 0x880a04}, {0x000000, 0x843506} },
	{ {0xa00000, 0x200000}, {0x200000, 0xa00000}, {0x400000, 0x400000}, {0x100000, 0x500000}, {0x240000, 0x740000}, {0x080000, 0x280000}, {0x020000, 0x6a0000}, {0x010000, 0x710000}, {0x008000, 0x388000}, {0x004000, 0x584000}, {0x202000, 0x4a2000}, {0x200100, 0x452500}, {0x001000, 0x311000}, {0x200800, 0x38a800}, {0x000400, 0x085400}, {0x200200, 0x622a00}, {0x200080, 0x52b280}, {0x000040, 0x794840}, {0x200020, 0x5aa420}, {0x200010, 0x1d7310}, {0x000008, 0x18a808}, {0x000002, 0x622a0a}, {0x000004, 0x485404}, {0x200000, 0x7ab282}, {0x200000, 0x0d484d}, {0x200000, 0x6c7317}, {0x200001, 0x152505}, {0x200000, 0x30a426}, {0x000000, 0x20280b}, {0x000000, 0x101401}, {0x200000, 0x280a04}, {0x200000, 0x243506} },
	{ {0x500000, 0x100000}, {0xa00000, 0x200000}, {0x100000, 0x500000}, {0x200000, 0xa00000}, {0x340000, 0x240000}, {0x080000, 0x280000}, {0x120000, 0x3a0000}, {0x110000, 0x210000}, {0x008000, 0x388000}, {0x104000, 0x084000}, {0x302000, 0x1a2000}, {0x300100, 0x152500}, {0x001000, 0x311000}, {0x200800, 0x38a800}, {0x000400, 0x085400}, {0x300200, 0x322a00}, {0x300080, 0x02b280}, {0x100040, 0x294840}, {0x300020, 0x0aa420}, {0x200010, 0x1d7310}, {0x000008, 0x18a808}, {0x100002, 0x322a0a}, {0x100004, 0x185404}, {0x300000, 0x2ab282}, {0x200000, 0x0d484d}, {0x300000, 0x3c7317}, {0x200001, 0x152505}, {0x200000, 0x30a426}, {0x000000, 0x20280b}, {0x000000, 0x101401}, {0x200000, 0x280a04}, {0x200000, 0x243506} },
	{ {0x3c0000, 0x0c0000}, {0x500000, 0x100000}, {0x940000, 0x040000}, {0x080000, 0x280000}, {0x100000, 0x500000}, {0x140000, 0x840000}, {0x1a0000, 0x120000}, {0x190000, 0x090000}, {0x088000, 0x108000}, {0x104000, 0x084000}, {0x0c2000, 0x162000}, {0x0c0100, 0x192500}, {0x081000, 0x191000}, {0x140800, 0x1ca800}, {0x000400, 0x085400}, {0x040200, 0x162a00}, {0x0c0080, 0x0eb280}, {0x180040, 0x014840}, {0x0c0020, 0x06a420}, {0x1c0010, 0x117310}, {0x000008, 0x18a808}, {0x180002, 0x1a2a0a}, {0x100004, 0x185404}, {0x040000, 0x0eb282}, {0x1c0000, 0x01484d}, {0x040000, 0x187317}, {0x1c0001, 0x192505}, {0x140000, 0x14a426}, {0x080000, 0x08280b}, {0x000000, 0x101401}, {0x140000, 0x0c0a04}, {0x140000, 0x003506} },
	{ {0x190000, 0x090000}, {0x250000, 0x050000}, {0x4a0000, 0x020000}, {0x8d0000, 0x0d0000}, {0x030000, 0x1b0000}, {0x080000, 0x280000}, {0x0a0000, 0x420000}, {0x0d0000, 0x8d0000}, {0x0b8000, 0x0b8000}, {0x094000, 0x014000}, {0x0f2000, 0x0d2000}, {0x0f0100, 0x022500}, {0x0b1000, 0x021000}, {0x0e0800, 0x0ea800}, {0x000400, 0x085400}, {0x070200, 0x0d2a00}, {0x0c0080, 0x0eb280}, {0x010040, 0x084840}, {0x0c0020, 0x06a420}, {0x060010, 0x037310}, {0x030008, 0x03a808}, {0x020002, 0x082a0a}, {0x0a0004, 0x0a5404}, {0x040000, 0x0eb282}, {0x050000, 0x08484d}, {0x070000, 0x037317}, {0x060001, 0x0b2505}, {0x0e0000, 0x06a426}, {0x080000, 0x08280b}, {0x030000, 0x0b1401}, {0x0d0000, 0x050a04}, {0x0d0000, 0x093506} },
	{ {0x094000, 0x014000}, {0x128000, 0x028000}, {0x250000, 0x050000}, {0x434000, 0x034000}, {0x868000, 0x068000}, {0x02c000, 0x0ac000}, {0x01c000, 0x11c000}, {0x038000, 0x238000}, {0x034000, 0x434000}, {0x068000, 0x868000}, {0x04a000, 0x06a000}, {0x064100, 0x036500}, {0x025000, 0x035000}, {0x058800, 0x052800}, {0x02c400, 0x029400}, {0x05c200, 0x07ea00}, {0x078080, 0x053280}, {0x03c040, 0x028840}, {0x054020, 0x07e420}, {0x060010, 0x037310}, {0x030008, 0x03a808}, {0x00c002, 0x02ea0a}, {0x018004, 0x01d404}, {0x06c000, 0x047282}, {0x07c000, 0x02884d}, {0x070000, 0x037317}, {0x04c001, 0x01e505}, {0x074000, 0x07e426}, {0x038000, 0x03a80b}, {0x01c000, 0x01d401}, {0x044000, 0x044a04}, {0x068000, 0x02b506} },
	{ {0x064100, 0x036500}, {0x094000, 0x014000}, {0x128000, 0x028000}, {0x21a000, 0x03a000}, {0x434000, 0x034000}, {0x822000, 0x002000}, {0x02e100, 0x05c500}, {0x02c000, 0x0ac000}, {0x01c000, 0x11c000}, {0x038000, 0x238000}, {0x034000, 0x434000}, {0x022000, 0x802000}, {0x025000, 0x035000}, {0x012800, 0x038800}, {0x02c400, 0x029400}, {0x016200, 0x014a00}, {0x032080, 0x039280}, {0x03c040, 0x028840}, {0x01e020, 0x014420}, {0x004110, 0x001610}, {0x030008, 0x03a808}, {0x00c002, 0x02ea0a}, {0x018004, 0x01d404}, {0x026000, 0x02d282}, {0x018100, 0x01ed4d}, {0x014100, 0x001617}, {0x028101, 0x028005}, {0x03e000, 0x014426}, {0x038000, 0x03a80b}, {0x01c000, 0x01d401}, {0x00e000, 0x02ea04}, {0x00c100, 0x01d006} },
	{ {0x037800, 0x00d800}, {0x041100, 0x003500}, {0x094000, 0x014000}, {0x10d000, 0x01d000}, {0x208800, 0x002800}, {0x411000, 0x001000}, {0x815800, 0x00f800}, {0x012800, 0x038800}, {0x019900, 0x051d00}, {0x009000, 0x099000}, {0x01c000, 0x11c000}, {0x01d000, 0x20d000}, {0x011000, 0x401000}, {0x015800, 0x80f800}, {0x009400, 0x01c400}, {0x016200, 0x014a00}, {0x017080, 0x00c280}, {0x019040, 0x01d840}, {0x01e020, 0x014420}, {0x004110, 0x001610}, {0x015008, 0x00f808}, {0x01e802, 0x01620a}, {0x018004, 0x01d404}, {0x003000, 0x018282}, {0x018100, 0x01ed4d}, {0x014100, 0x001617}, {0x00d101, 0x01d005}, {0x009800, 0x019c26}, {0x01d000, 0x00f80b}, {0x01c000, 0x01d401}, {0x01c800, 0x016204}, {0x00c100, 0x01d006} },
	{ {0x01f600, 0x008e00}, {0x028e00, 0x005600}, {0x041100, 0x003500}, {0x082200, 0x000a00}, {0x104400, 0x001400}, {0x208800, 0x002800}, {0x40e600, 0x009e00}, {0x80ae00, 0x007600}, {0x009400, 0x01c400}, {0x004a00, 0x02c200}, {0x00fb00, 0x045700}, {0x000400, 0x085400}, {0x00a200, 0x108a00}, {0x002600, 0x205e00}, {0x00e600, 0x409e00}, {0x00ae00, 0x807600}, {0x008680, 0x004c80}, {0x00f240, 0x009240}, {0x008220, 0x000e20}, {0x004110, 0x001610}, {0x00a608, 0x007608}, {0x008a02, 0x00280a}, {0x00e204, 0x009e04}, {0x00a400, 0x004682}, {0x00e300, 0x00a74d}, {0x00b700, 0x009817}, {0x004501, 0x001405}, {0x000c00, 0x005826}, {0x002600, 0x00760b}, {0x00a200, 0x009e01}, {0x00aa00, 0x002804}, {0x005500, 0x001406} },
	{ {0x008680, 0x004c80}, {0x010440, 0x001c40}, {0x020880, 0x001a80}, {0x041100, 0x003500}, {0x082200, 0x000a00}, {0x104400, 0x001400}, {0x200e80, 0x006480}, {0x401440, 0x000c40}, {0x802880, 0x003a80}, {0x0074c0, 0x00dec0}, {0x006640, 0x015640}, {0x003ec0, 0x021cc0}, {0x007d80, 0x041b80}, {0x000400, 0x085400}, {0x005040, 0x101840}, {0x002600, 0x205e00}, {0x001440, 0x400c40}, {0x002880, 0x803a80}, {0x0004a0, 0x0042a0}, {0x004110, 0x001610}, {0x002088, 0x003a88}, {0x000c82, 0x00648a}, {0x001044, 0x000c44}, {0x002280, 0x000a02}, {0x001140, 0x00350d}, {0x004540, 0x000a57}, {0x004501, 0x001405}, {0x000c00, 0x005826}, {0x002600, 0x00760b}, {0x005040, 0x000c41}, {0x002c80, 0x006484}, {0x005500, 0x001406} },
	{ {0x004110, 0x001610}, {0x008220, 0x000e20}, {0x010440, 0x001c40}, {0x020880, 0x001a80}, {0x041100, 0x003500}, {0x082200, 0x000a00}, {0x100510, 0x000210}, {0x200a20, 0x002620}, {0x401440, 0x000c40}, {0x802880, 0x003a80}, {0x0004a0, 0x0042a0}, {0x003170, 0x008a70}, {0x0023f0, 0x0102f0}, {0x003ec0, 0x021cc0}, {0x003c90, 0x040d90}, {0x0000a0, 0x0816a0}, {0x001150, 0x100e50}, {0x0022a0, 0x201ca0}, {0x001440, 0x400c40}, {0x002880, 0x803a80}, {0x002088, 0x003a88}, {0x000822, 0x00262a}, {0x001044, 0x000c44}, {0x002280, 0x000a02}, {0x001140, 0x00350d}, {0x000450, 0x001c47}, {0x000411, 0x000215}, {0x0008a0, 0x001a86}, {0x0022a0, 0x0034ab}, {0x001150, 0x001a51}, {0x002820, 0x002624}, {0x001410, 0x000216} },
	{ {0x0028aa, 0x001ca2}, {0x004110, 0x001610}, {0x008220, 0x000e20}, {0x010440, 0x001c40}, {0x020880, 0x001a80}, {0x041922, 0x00132a}, {0x080aaa, 0x0016a2}, {0x100510, 0x000210}, {0x200202, 0x00000a}, {0x401440, 0x000c40}, {0x800808, 0x000008}, {0x000822, 0x00262a}, {0x0004a0, 0x0042a0}, {0x0019da, 0x0096d2}, {0x000b5a, 0x011e52}, {0x00166a, 0x020062}, {0x00143a, 0x041132}, {0x0000a0, 0x0816a0}, {0x001150, 0x100e50}, {0x000a0a, 0x200002}, {0x001440, 0x400c40}, {0x000808, 0x800008}, {0x001044, 0x000c44}, {0x000a2a, 0x0016a0}, {0x001962, 0x001327}, {0x000450, 0x001c47}, {0x000411, 0x000215}, {0x0008a0, 0x001a86}, {0x000228, 0x000e23}, {0x001150, 0x001a51}, {0x0008a8, 0x001cac}, {0x001410, 0x000216} },
	{ {0x001044, 0x000c44}, {0x002280, 0x000a02}, {0x004b3a, 0x0000b0}, {0x008220, 0x000e20}, {0x010e6a, 0x000ae0}, {0x0202aa, 0x000c20}, {0x04034c, 0x0009ce}, {0x080080, 0x000002}, {0x100510, 0x000210}, {0x200202, 0x00000a}, {0x400404, 0x000004}, {0x800808, 0x000008}, {0x000a2a, 0x0016a0}, {0x000822, 0x00262a}, {0x0004a0, 0x0042a0}, {0x0003b4, 0x008c36}, {0x000170, 0x0108f2}, {0x00062e, 0x020c26}, {0x000e54, 0x040bd6}, {0x000a8a, 0x080000}, {0x000114, 0x100214}, {0x000a0a, 0x200002}, {0x000404, 0x400004}, {0x000808, 0x800008}, {0x00030c, 0x0009c3}, {0x000e7a, 0x000ae7}, {0x000411, 0x000215}, {0x00028a, 0x000c26}, {0x000228, 0x000e23}, {0x000b3e, 0x0000b5}, {0x000282, 0x000a0c}, {0x000454, 0x000e52} },
	{ {0x000d76, 0x000324}, {0x001348, 0x000587}, {0x00218c, 0x0003c1}, {0x00464c, 0x000394}, {0x00812c, 0x0007e3}, {0x010010, 0x000007}, {0x0201a6, 0x0005e3}, {0x040040, 0x00000d}, {0x080080, 0x000002}, {0x100510, 0x000210}, {0x200202, 0x00000a}, {0x400404, 0x000004}, {0x80057e, 0x00032c}, {0x00030c, 0x0009c3}, {0x00075c, 0x001584}, {0x000554, 0x00250e}, {0x0004a0, 0x0042a0}, {0x0000b8, 0x0085f5}, {0x00027c, 0x010131}, {0x000522, 0x0205e5}, {0x00002e, 0x040131}, {0x0007fc, 0x080324}, {0x000114, 0x100214}, {0x00077c, 0x200326}, {0x000404, 0x400004}, {0x00057e, 0x80032c}, {0x000411, 0x000215}, {0x000186, 0x0005e5}, {0x000124, 0x0007e0}, {0x000648, 0x000391}, {0x00018e, 0x0003cf}, {0x000758, 0x000791} },
	{ {0x000411, 0x000215}, {0x000967, 0x000131}, {0x0012ce, 0x000062}, {0x00218c, 0x0003c1}, {0x00425d, 0x000181}, {0x0080aa, 0x000206}, {0x010010, 0x000007}, {0x020020, 0x000006}, {0x040040, 0x00000d}, {0x080080, 0x000002}, {0x100101, 0x000005}, {0x200202, 0x00000a}, {0x400015, 0x000211}, {0x80016f, 0x000139}, {0x000186, 0x0005e5}, {0x00030c, 0x0009c3}, {0x0002cb, 0x001274}, {0x0000c3, 0x0022fe}, {0x0000b1, 0x0040b5}, {0x00013e, 0x008010}, {0x00027c, 0x010131}, {0x0000b5, 0x020215}, {0x00002e, 0x040131}, {0x0003ed, 0x080131}, {0x000114, 0x100214}, {0x00036d, 0x200133}, {0x000015, 0x400211}, {0x00016f, 0x800139}, {0x0000a2, 0x000205}, {0x000259, 0x000184}, {0x00018e, 0x0003cf}, {0x0002cf, 0x000061} },
	{ {0x000259, 0x000184}, {0x0004b3, 0x000010}, {0x000967, 0x000131}, {0x001097, 0x0001e6}, {0x00212e, 0x0001c4}, {0x004004, 0x000005}, {0x008008, 0x000003}, {0x010010, 0x000007}, {0x020020, 0x000006}, {0x040040, 0x00000d}, {0x080080, 0x000002}, {0x100101, 0x000005}, {0x20005b, 0x00018e}, {0x4000b7, 0x000014}, {0x80016f, 0x000139}, {0x0000a2, 0x000205}, {0x000186, 0x0005e5}, {0x000155, 0x000847}, {0x000030, 0x0011f5}, {0x000061, 0x0020fb}, {0x0000b1, 0x0040b5}, {0x00013e, 0x008010}, {0x000025, 0x0100b5}, {0x000017, 0x020010}, {0x00002e, 0x040131}, {0x0001b4, 0x0800b5}, {0x0001b6, 0x100011}, {0x000134, 0x2000b7}, {0x0000b7, 0x400014}, {0x00016f, 0x800139}, {0x00012c, 0x0001ca}, {0x000096, 0x0001e5} }
};

const int32 FSobol::Cell2DGrayNumbers[FSobol::MaxCell2DBits + 1][32][2] = {
	{ {0x800000, 0x800000}, {0xa00000, 0x200000}, {0xe00000, 0x600000}, {0xf00000, 0x300000}, {0xf40000, 0xe40000}, {0xfc0000, 0xcc0000}, {0xfe0000, 0xa60000}, {0xff0000, 0xd70000}, {0xff8000, 0xef8000}, {0xffc000, 0xb7c000}, {0xffe000, 0x5de000}, {0xffe100, 0xb8c500}, {0xfff100, 0x89d500}, {0xfff900, 0x117d00}, {0xfffd00, 0x192900}, {0xffff00, 0xdb0300}, {0xffff80, 0x29b180}, {0xffffc0, 0x50f9c0}, {0xffffe0, 0xaa5de0}, {0xfffff0, 0x172ef0}, {0xfffff8, 0x0f86f8}, {0xfffffa, 0x6dacf2}, {0xfffffe, 0x25f8f6}, {0xfffffe, 0xff4a74}, {0xfffffe, 0x520239}, {0xfffffe, 0x9e712e}, {0xffffff, 0x2b542b}, {0xffffff, 0xbbf00d}, {0xffffff, 0x9bd806}, {0xffffff, 0x8bcc07}, {0xffffff, 0x03c603}, {0xffffff, 0x87f305} },
	{ {0x400000, 0x400000}, {0x500000, 0x100000}, {0x740000, 0x640000}, {0x7c0000, 0x4c0000}, {0x7e0000, 0x260000}, {0x7f0000, 0x570000}, {0x7f8000, 0x6f8000}, {0x7fc000, 0x37c000}, {0x5fe000, 0x7de000}, {0x7fe100, 0x38c500}, {0x7ff100, 0x09d500}, {0x5ff900, 0x317d00}, {0x5ffd00, 0x392900}, {0x7fff00, 0x5b0300}, {0x5fff80, 0x09b180}, {0x5fffc0, 0x70f9c0}, {0x7fffe0, 0x2a5de0}, {0x5ffff0, 0x372ef0}, {0x5ffff8, 0x2f86f8}, {0x5ffffa, 0x4dacf2}, {0x5ffffe, 0x05f8f6}, {0x7ffffe, 0x7f4a74}, {0x5ffffe, 0x720239}, {0x7ffffe, 0x1e712e}, {0x5fffff, 0x0b542b}, {0x7fffff, 0x3bf00d}, {0x7fffff, 0x1bd806}, {0x7fffff, 0x0bcc07}, {0x5fffff, 0x23c603}, {0x7fffff, 0x07f305}, {0x7fffff, 0x45e98e}, {0x5fffff, 0x40f5c3} },
	{ {0x340000, 0x240000}, {0x3c0000, 0x0c0000}, {0x2e0000, 0x360000}, {0x3f0000, 0x170000}, {0x3f8000, 0x2f8000}, {0x2fc000, 0x27c000}, {0x1fe000, 0x3de000}, {0x2fe100, 0x28c500}, {0x2ff100, 0x19d500}, {0x0ff900, 0x217d00}, {0x0ffd00, 0x292900}, {0x3fff00, 0x1b0300}, {0x0fff80, 0x19b180}, {0x1fffc0, 0x30f9c0}, {0x2fffe0, 0x3a5de0}, {0x0ffff0, 0x272ef0}, {0x0ffff8, 0x3f86f8}, {0x1ffffa, 0x0dacf2}, {0x0ffffe, 0x15f8f6}, {0x3ffffe, 0x3f4a74}, {0x1ffffe, 0x320239}, {0x2ffffe, 0x0e712e}, {0x0fffff, 0x1b542b}, {0x2fffff, 0x2bf00d}, {0x2fffff, 0x0bd806}, {0x2fffff, 0x1bcc07}, {0x0fffff, 0x33c603}, {0x2fffff, 0x17f305}, {0x3fffff, 0x05e98e}, {0x1fffff, 0x00f5c3}, {0x0fffff, 0x027be9}, {0x0fffff, 0x2b2df0} },
	{ {0x1a0000, 0x120000}, {0x030000, 0x1b0000}, {0x0b8000, 0x0b8000}, {0x1bc000, 0x03c000}, {0x17e000, 0x15e000}, {0x1be100, 0x0cc500}, {0x13f100, 0x15d500}, {0x07f900, 0x097d00}, {0x07fd00, 0x012900}, {0x03ff00, 0x170300}, {0x0fff80, 0x19b180}, {0x17ffc0, 0x18f9c0}, {0x1bffe0, 0x1e5de0}, {0x07fff0, 0x0f2ef0}, {0x07fff8, 0x1786f8}, {0x1ffffa, 0x0dacf2}, {0x0ffffe, 0x15f8f6}, {0x0bfffe, 0x1b4a74}, {0x17fffe, 0x1a0239}, {0x13fffe, 0x02712e}, {0x0fffff, 0x1b542b}, {0x1bffff, 0x0ff00d}, {0x13ffff, 0x07d806}, {0x13ffff, 0x17cc07}, {0x07ffff, 0x1bc603}, {0x13ffff, 0x1bf305}, {0x03ffff, 0x09e98e}, {0x1fffff, 0x00f5c3}, {0x0fffff, 0x027be9}, {0x07ffff, 0x032df0}, {0x03ffff, 0x05b774}, {0x1bffff, 0x14eb32} },
	{ {0x0b8000, 0x0b8000}, {0x02c000, 0x0ac000}, {0x0de000, 0x07e000}, {0x02e100, 0x05c500}, {0x09f100, 0x07d500}, {0x07f900, 0x097d00}, {0x07fd00, 0x012900}, {0x00ff00, 0x0c0300}, {0x0cff80, 0x02b180}, {0x0dffc0, 0x0af9c0}, {0x01ffe0, 0x0c5de0}, {0x07fff0, 0x0f2ef0}, {0x04fff8, 0x0c86f8}, {0x06fffa, 0x04acf2}, {0x0cfffe, 0x0ef8f6}, {0x08fffe, 0x004a74}, {0x0dfffe, 0x080239}, {0x0afffe, 0x0b712e}, {0x0cffff, 0x00542b}, {0x02ffff, 0x06f00d}, {0x0affff, 0x0ed806}, {0x09ffff, 0x05cc07}, {0x04ffff, 0x00c603}, {0x09ffff, 0x09f305}, {0x03ffff, 0x09e98e}, {0x06ffff, 0x09f5c3}, {0x0fffff, 0x027be9}, {0x07ffff, 0x032df0}, {0x03ffff, 0x05b774}, {0x01ffff, 0x06eb32}, {0x00ffff, 0x054519}, {0x0bffff, 0x0f0304} },
	{ {0x04a000, 0x06a000}, {0x02e100, 0x05c500}, {0x00b100, 0x069500}, {0x053900, 0x03bd00}, {0x07fd00, 0x012900}, {0x023f00, 0x06c300}, {0x05bf80, 0x03f180}, {0x067fc0, 0x0179c0}, {0x033fe0, 0x069de0}, {0x053ff0, 0x05eef0}, {0x063ff8, 0x0646f8}, {0x06fffa, 0x04acf2}, {0x077ffe, 0x0578f6}, {0x01bffe, 0x010a74}, {0x067ffe, 0x038239}, {0x017ffe, 0x00f12e}, {0x05bfff, 0x01142b}, {0x02ffff, 0x06f00d}, {0x017fff, 0x055806}, {0x00bfff, 0x048c07}, {0x04ffff, 0x00c603}, {0x027fff, 0x027305}, {0x013fff, 0x03298e}, {0x043fff, 0x0335c3}, {0x06bfff, 0x033be9}, {0x07ffff, 0x032df0}, {0x03ffff, 0x05b774}, {0x01ffff, 0x06eb32}, {0x00ffff, 0x054519}, {0x007fff, 0x048304}, {0x003fff, 0x067186}, {0x04bfff, 0x07b9cb} },
	{ {0x025000, 0x035000}, {0x037800, 0x00d800}, {0x01bc00, 0x024c00}, {0x00de00, 0x030600}, {0x03fe80, 0x009480}, {0x003ec0, 0x021cc0}, {0x01dee0, 0x0358e0}, {0x019ff0, 0x034ef0}, {0x029ff8, 0x00e6f8}, {0x025ffa, 0x020cf2}, {0x03dffe, 0x03d8f6}, {0x01bffe, 0x010a74}, {0x003efe, 0x00e739}, {0x017ffe, 0x00f12e}, {0x03feff, 0x02712b}, {0x001eff, 0x03350d}, {0x039eff, 0x009d06}, {0x025eff, 0x014907}, {0x02beff, 0x03a303}, {0x027fff, 0x027305}, {0x013fff, 0x03298e}, {0x027eff, 0x0050c3}, {0x00feff, 0x005ee9}, {0x01beff, 0x0048f0}, {0x011eff, 0x007274}, {0x031eff, 0x032e32}, {0x021eff, 0x008019}, {0x029eff, 0x014604}, {0x02deff, 0x03b486}, {0x001fff, 0x0119cb}, {0x025fff, 0x03fded}, {0x019eff, 0x016bfa} },
	{ {0x009400, 0x01c400}, {0x01f600, 0x008e00}, {0x008680, 0x004c80}, {0x0116c0, 0x0194c0}, {0x00f6e0, 0x00d0e0}, {0x00b7f0, 0x00c6f0}, {0x01e7f8, 0x003ef8}, {0x000ffa, 0x015cf2}, {0x018ffe, 0x0088f6}, {0x01bffe, 0x010a74}, {0x003efe, 0x00e739}, {0x017ffe, 0x00f12e}, {0x01aeff, 0x01212b}, {0x0136ff, 0x00bd0d}, {0x00e6ff, 0x004506}, {0x0126ff, 0x019107}, {0x00eeff, 0x00f303}, {0x002fff, 0x012305}, {0x0017ff, 0x00a18e}, {0x0106ff, 0x0088c3}, {0x00feff, 0x005ee9}, {0x01beff, 0x0048f0}, {0x011eff, 0x007274}, {0x014eff, 0x007e32}, {0x0166ff, 0x005819}, {0x01e6ff, 0x019e04}, {0x008eff, 0x00e486}, {0x001fff, 0x0119cb}, {0x000fff, 0x00aded}, {0x019eff, 0x016bfa}, {0x010eff, 0x00d3f1}, {0x00dfff, 0x0132f0} },
	{ {0x008680, 0x004c80}, {0x0074c0, 0x00dec0}, {0x00f6e0, 0x00d0e0}, {0x00b7f0, 0x00c6f0}, {0x0011f8, 0x00b0f8}, {0x009bfa, 0x0098f2}, {0x0079fe, 0x0006f6}, {0x00ddfe, 0x004074}, {0x003efe, 0x00e739}, {0x0089fe, 0x007f2e}, {0x00ccff, 0x006b2b}, {0x00c0ff, 0x00330d}, {0x00e6ff, 0x004506}, {0x0044ff, 0x00db07}, {0x00eeff, 0x00f303}, {0x00bbff, 0x00e705}, {0x0017ff, 0x00a18e}, {0x00f0ff, 0x0006c3}, {0x00feff, 0x005ee9}, {0x0048ff, 0x00c6f0}, {0x00e8ff, 0x00fc74}, {0x00b8ff, 0x00f032}, {0x0090ff, 0x00d619}, {0x0084ff, 0x00d404}, {0x008eff, 0x00e486}, {0x008bff, 0x00ddcb}, {0x000fff, 0x00aded}, {0x00fcff, 0x0021fa}, {0x00f8ff, 0x005df1}, {0x004bff, 0x00f6f0}, {0x006fff, 0x0088f4}, {0x00ccff, 0x0012f2} },
	{ {0x0004a0, 0x0042a0}, {0x0045b0, 0x0054b0}, {0x006538, 0x006e38}, {0x0069ba, 0x000ab2}, {0x0079fe, 0x0006f6}, {0x005b7e, 0x000cf4}, {0x004a3e, 0x0039f9}, {0x000f7e, 0x0033ae}, {0x004a7f, 0x0027ab}, {0x00467f, 0x007f8d}, {0x00607f, 0x000986}, {0x00303f, 0x0005c7}, {0x001cbf, 0x006143}, {0x0049bf, 0x007545}, {0x00633f, 0x007f4e}, {0x00767f, 0x004a43}, {0x00787f, 0x001269}, {0x003c3f, 0x001830}, {0x001abf, 0x006e34}, {0x004abf, 0x006272}, {0x0062bf, 0x004459}, {0x0076bf, 0x004644}, {0x007cbf, 0x0076c6}, {0x0079bf, 0x004f8b}, {0x007b3f, 0x00732d}, {0x007a7f, 0x006d7a}, {0x007e7f, 0x001171}, {0x003f3f, 0x002830}, {0x001b3f, 0x005634}, {0x004a7f, 0x005e72}, {0x00667f, 0x0018f9}, {0x00333f, 0x002df4} },
	{ {0x002088, 0x003a88}, {0x0028aa, 0x001ca2}, {0x0038ee, 0x0010e6}, {0x001a6e, 0x001ae4}, {0x000b2e, 0x002fe9}, {0x000f7e, 0x0033ae}, {0x000b6f, 0x0031bb}, {0x0003cf, 0x002b3d}, {0x00216f, 0x001f96}, {0x00303f, 0x0005c7}, {0x00181f, 0x0023e3}, {0x000c0f, 0x0021f5}, {0x00268f, 0x002bfe}, {0x0033cf, 0x001ef3}, {0x00396f, 0x000479}, {0x003c3f, 0x001830}, {0x001e1f, 0x002c94}, {0x000f0f, 0x0036c2}, {0x00270f, 0x0010e9}, {0x00330f, 0x0012f4}, {0x00390f, 0x002276}, {0x003c0f, 0x001b3b}, {0x003e8f, 0x00279d}, {0x003fcf, 0x0039ca}, {0x003f6f, 0x000761}, {0x003f3f, 0x002830}, {0x001f9f, 0x001494}, {0x000fcf, 0x000ac2}, {0x00276f, 0x000ee9}, {0x00333f, 0x002df4}, {0x00199f, 0x00377e}, {0x000ccf, 0x002b37} },
	{ {0x001044, 0x000c44}, {0x001a6e, 0x001ae4}, {0x00030c, 0x0009c3}, {0x00075c, 0x001584}, {0x00034d, 0x001791}, {0x000bed, 0x000d17}, {0x0009c5, 0x000334}, {0x001895, 0x001965}, {0x00103d, 0x0005c9}, {0x00042d, 0x0007df}, {0x000607, 0x001176}, {0x001b65, 0x000251}, {0x0011c5, 0x0018db}, {0x001495, 0x000492}, {0x00163d, 0x000abe}, {0x00072d, 0x0010e8}, {0x000fa5, 0x000c4b}, {0x001ba5, 0x000e56}, {0x001987, 0x0018fe}, {0x0014a5, 0x000799}, {0x001e07, 0x001d15}, {0x001f47, 0x000342}, {0x0017c5, 0x001bc3}, {0x001fb7, 0x0012b8}, {0x001f9f, 0x001494}, {0x000fcf, 0x000ac2}, {0x000fc5, 0x00124b}, {0x0013b7, 0x00177c}, {0x0011bd, 0x001154}, {0x0004ed, 0x000d1d}, {0x000e45, 0x000331}, {0x001b55, 0x001967} },
	{ {0x00030c, 0x0009c3}, {0x000d76, 0x000324}, {0x000967, 0x000131}, {0x000bed, 0x000d17}, {0x0009c5, 0x000334}, {0x0002fb, 0x000381}, {0x000079, 0x00098d}, {0x00042d, 0x0007df}, {0x000c2d, 0x0007d6}, {0x000b21, 0x000e15}, {0x000bab, 0x00023f}, {0x0004d1, 0x0008d6}, {0x000679, 0x0006fa}, {0x000d07, 0x000648}, {0x000fa5, 0x000c4b}, {0x000be1, 0x000212}, {0x0003e9, 0x00021a}, {0x0004e1, 0x000bdd}, {0x000469, 0x0007f1}, {0x000f03, 0x000f06}, {0x000dab, 0x000127}, {0x0005d9, 0x00085c}, {0x0005f1, 0x000e70}, {0x000fcf, 0x000ac2}, {0x0005ef, 0x0004eb}, {0x0009d9, 0x000d98}, {0x000bd3, 0x000bb0}, {0x0004ed, 0x000d1d}, {0x000e45, 0x000331}, {0x00013b, 0x000383}, {0x000199, 0x000980}, {0x0004dd, 0x0007d9} },
	{ {0x000411, 0x000215}, {0x000597, 0x0007f0}, {0x0004b3, 0x000010}, {0x0002fb, 0x000381}, {0x000375, 0x00004e}, {0x00042d, 0x0007df}, {0x00015b, 0x0004f2}, {0x00055b, 0x0004f2}, {0x0006dd, 0x00011b}, {0x0007dd, 0x000115}, {0x000679, 0x0006fa}, {0x000071, 0x00056c}, {0x0001df, 0x0006ac}, {0x000697, 0x000136}, {0x0003e9, 0x00021a}, {0x0007ed, 0x00021e}, {0x000469, 0x0007f1}, {0x000179, 0x0005e1}, {0x0000dd, 0x000203}, {0x0006d5, 0x00019f}, {0x0006fd, 0x0007b3}, {0x0001b5, 0x000025}, {0x0005ef, 0x0004eb}, {0x0007a3, 0x00077f}, {0x0005a9, 0x000157}, {0x0007e1, 0x0004de}, {0x000333, 0x000015}, {0x00013b, 0x000383}, {0x000295, 0x000043}, {0x0004dd, 0x0007d9}, {0x000123, 0x0004f5}, {0x000567, 0x0004f1} },
	{ {0x0000a2, 0x000205}, {0x0002fb, 0x000381}, {0x000375, 0x00004e}, {0x0001ba, 0x00002f}, {0x0000dd, 0x000117}, {0x0000cc, 0x000302}, {0x0002cc, 0x00030e}, {0x0003cc, 0x000300}, {0x0003ee, 0x00010a}, {0x0001f7, 0x000089}, {0x000059, 0x000349}, {0x000286, 0x000323}, {0x0003e9, 0x00021a}, {0x0003fc, 0x00000b}, {0x0001fe, 0x000001}, {0x0000ff, 0x000004}, {0x0000dd, 0x000203}, {0x0002c4, 0x00038a}, {0x00036a, 0x000043}, {0x0001b5, 0x000025}, {0x000078, 0x00031b}, {0x000234, 0x00008f}, {0x0001b8, 0x000342}, {0x000276, 0x00032e}, {0x000333, 0x000015}, {0x00013b, 0x000383}, {0x000295, 0x000043}, {0x00014a, 0x000029}, {0x0000a5, 0x000110}, {0x0000f0, 0x000301}, {0x0002d2, 0x00030b}, {0x0003c3, 0x00030e} },
	{ {0x00012c, 0x0001ca}, {0x0001ba, 0x00002f}, {0x0000dd, 0x000117}, {0x00006e, 0x000107}, {0x000037, 0x00008f}, {0x000137, 0x000081}, {0x0001b7, 0x00008e}, {0x0001f7, 0x000089}, {0x0000fb, 0x00014c}, {0x00007d, 0x0000a2}, {0x000112, 0x00019b}, {0x0001a5, 0x00018f}, {0x0001fe, 0x000001}, {0x0000ff, 0x000004}, {0x00007f, 0x000006}, {0x00003f, 0x00000b}, {0x000133, 0x0001c7}, {0x0001b5, 0x000025}, {0x0000da, 0x00011e}, {0x00006d, 0x00010b}, {0x00011a, 0x000147}, {0x00008d, 0x0000af}, {0x00016a, 0x000191}, {0x000199, 0x000186}, {0x0000cc, 0x0001c7}, {0x00014a, 0x000029}, {0x0000a5, 0x000110}, {0x000052, 0x000104}, {0x000029, 0x00008a}, {0x000138, 0x00008f}, {0x0001b0, 0x00008d}, {0x0001f4, 0x000080} }
};

const int32 FSobol::Cell3DDirectionNumbers[FSobol::MaxCell3DBits + 1][32][3] = {
	{ {0x800000, 0x800000, 0x800000}, {0xc00000, 0xc00000, 0x400000}, {0x900000, 0x500000, 0xb00000}, {0x600000, 0x200000, 0x200000}, {0xe80000, 0xf80000, 0xf80000}, {0x8e0000, 0xa20000, 0x7a0000}, {0x5c0000, 0x740000, 0xdc0000}, {0xc50000, 0x930000, 0x9d0000}, {0x688000, 0xd88000, 0x5a8000}, {0x9cc000, 0x254000, 0x2fc000}, {0xee6000, 0x59e000, 0xa16000}, {0x559000, 0xe6d000, 0xf0b000}, {0xc09c00, 0xb40c00, 0x6fc400}, {0x60ee00, 0x820200, 0x816200}, {0xe88080, 0x208f80, 0x228780}, {0x806800, 0x780800, 0xda8800}, {0x905500, 0xc30500, 0x40bb00}, {0x5cc0c0, 0x514740, 0xb3c9c0}, {0x8e6060, 0xfbea20, 0xfb65a0}, {0x6868e8, 0xa08588, 0x780228}, {0x9c9c5c, 0x914e54, 0x9c0b3c}, {0xc59090, 0x75d930, 0xddb2d0}, {0x5555c5, 0x25db6d, 0x2d0ddb}, {0x8000e8, 0x588000, 0xa28780}, {0xeeee8e, 0xdbe79e, 0x5a0fb6}, {0xc0005c, 0xe54000, 0xf3c9c0}, {0x60008e, 0x79e000, 0xdb65a0}, {0x9000c5, 0xb6d000, 0x6db2d0}, {0xe80068, 0x800800, 0x800228}, {0x8e00ee, 0x200200, 0x200fb6}, {0x5c009c, 0xc00c00, 0x400b3c}, {0xc50055, 0x500500, 0xb00ddb} },
	{ {0xd00000, 0x100000, 0x700000}, {0x100000, 0xd00000, 0x300000}, {0x400000, 0x400000, 0xc00000}, {0x600000, 0x200000, 0x200000}, {0x680000, 0x780000, 0x780000}, {0x4e0000, 0x620000, 0x3a0000}, {0x1c0000, 0x340000, 0x1c0000}, {0x450000, 0x130000, 0x1d0000}, {0x788000, 0x088000, 0x6a8000}, {0x4cc000, 0x354000, 0x5fc000}, {0x7e6000, 0x09e000, 0x116000}, {0x059000, 0x76d000, 0x00b000}, {0x009c00, 0x740c00, 0x2fc400}, {0x30ee00, 0x120200, 0x716200}, {0x388080, 0x308f80, 0x528780}, {0x106800, 0x280800, 0x6a8800}, {0x505500, 0x030500, 0x00bb00}, {0x1cc0c0, 0x114740, 0x73c9c0}, {0x0e6060, 0x7bea20, 0x7b65a0}, {0x7868e8, 0x708588, 0x480228}, {0x1c9c5c, 0x114e54, 0x1c0b3c}, {0x559090, 0x25d930, 0x6db2d0}, {0x5555c5, 0x25db6d, 0x2d0ddb}, {0x1000e8, 0x088000, 0x128780}, {0x2eee8e, 0x1be79e, 0x1a0fb6}, {0x40005c, 0x654000, 0x73c9c0}, {0x20008e, 0x39e000, 0x1b65a0}, {0x5000c5, 0x76d000, 0x2db2d0}, {0x680068, 0x000800, 0x000228}, {0x5e00ee, 0x300200, 0x500fb6}, {0x4c009c, 0x100c00, 0x700b3c}, {0x550055, 0x000500, 0x000ddb} },
	{ {0x600000, 0x200000, 0x200000}, {0x960000, 0x2a0000, 0x120000}, {0x2e0000, 0x420000, 0x1a0000}, {0x3e0000, 0x920000, 0x2a0000}, {0x260000, 0x1a0000, 0x420000}, {0x280000, 0x380000, 0xb80000}, {0x1c0000, 0x340000, 0x1c0000}, {0x250000, 0x330000, 0x3d0000}, {0x3e8000, 0x328000, 0x088000}, {0x0ac000, 0x0f4000, 0x3dc000}, {0x1e6000, 0x29e000, 0x316000}, {0x2b9000, 0x34d000, 0x1ab000}, {0x2e9c00, 0x360c00, 0x35c400}, {0x16ee00, 0x080200, 0x336200}, {0x1e8080, 0x2a8f80, 0x108780}, {0x366800, 0x320800, 0x288800}, {0x305500, 0x230500, 0x20bb00}, {0x3ac0c0, 0x0b4740, 0x31c9c0}, {0x066060, 0x23ea20, 0x2365a0}, {0x1068e8, 0x088588, 0x300228}, {0x1c9c5c, 0x114e54, 0x1c0b3c}, {0x139090, 0x1fd930, 0x0fb2d0}, {0x3555c5, 0x05db6d, 0x0d0ddb}, {0x1000e8, 0x088000, 0x128780}, {0x2eee8e, 0x1be79e, 0x1a0fb6}, {0x28005c, 0x1d4000, 0x0bc9c0}, {0x20008e, 0x39e000, 0x1b65a0}, {0x1e00c5, 0x14d000, 0x17b2d0}, {0x080068, 0x200800, 0x200228}, {0x1800ee, 0x0a0200, 0x320fb6}, {0x0a009c, 0x2a0c00, 0x120b3c}, {0x350055, 0x200500, 0x200ddb} },
	{ {0x228000, 0x068000, 0x148000}, {0x450000, 0x130000, 0x1d0000}, {0x8a0000, 0x1e0000, 0x0e0000}, {0x1c0000, 0x340000, 0x1c0000}, {0x0c8000, 0x448000, 0x0e8000}, {0x070000, 0x950000, 0x0b0000}, {0x1b8000, 0x018000, 0x358000}, {0x048000, 0x1c8000, 0x568000}, {0x0d0000, 0x0b0000, 0x850000}, {0x114000, 0x0ec000, 0x084000}, {0x19e000, 0x1c6000, 0x18e000}, {0x151000, 0x065000, 0x123000}, {0x0b9c00, 0x050c00, 0x08c400}, {0x0d6e00, 0x098200, 0x06e200}, {0x028080, 0x1e8f80, 0x0c8780}, {0x136800, 0x010800, 0x158800}, {0x155500, 0x100500, 0x1dbb00}, {0x03c0c0, 0x0c4740, 0x10c9c0}, {0x01e060, 0x166a20, 0x0ae5a0}, {0x0be8e8, 0x090588, 0x058228}, {0x1c9c5c, 0x114e54, 0x1c0b3c}, {0x139090, 0x1fd930, 0x0fb2d0}, {0x17d5c5, 0x035b6d, 0x198ddb}, {0x1000e8, 0x088000, 0x128780}, {0x0c6e8e, 0x1d679e, 0x0e8fb6}, {0x0a805c, 0x1bc000, 0x1f49c0}, {0x1e808e, 0x0b6000, 0x13e5a0}, {0x1e00c5, 0x14d000, 0x17b2d0}, {0x0f8068, 0x158800, 0x098228}, {0x0380ee, 0x0b8200, 0x078fb6}, {0x16009c, 0x1e0c00, 0x0e0b3c}, {0x100055, 0x130500, 0x1d0ddb} },
	{ {0x114000, 0x0ec000, 0x084000}, {0x26d000, 0x0e1000, 0x0ef000}, {0x4da000, 0x01a000, 0x0da000}, {0x86f000, 0x043000, 0x04d000}, {0x0cf000, 0x1a3000, 0x0ad000}, {0x05e000, 0x286000, 0x04e000}, {0x0c8000, 0x448000, 0x0e8000}, {0x0bf000, 0x8f3000, 0x01d000}, {0x045000, 0x089000, 0x1a7000}, {0x0e9000, 0x07d000, 0x27b000}, {0x0c2000, 0x0e2000, 0x462000}, {0x0d0000, 0x0b0000, 0x850000}, {0x0b9c00, 0x050c00, 0x08c400}, {0x0d6e00, 0x098200, 0x06e200}, {0x0e7080, 0x04bf80, 0x065780}, {0x067800, 0x075800, 0x07b800}, {0x0cb500, 0x0c6500, 0x055b00}, {0x0790c0, 0x04d740, 0x0ab9c0}, {0x0d1060, 0x0c5a20, 0x0035a0}, {0x0be8e8, 0x090588, 0x058228}, {0x057c5c, 0x0d2e54, 0x04eb3c}, {0x0e2090, 0x0b2930, 0x0d22d0}, {0x02c5c5, 0x050b6d, 0x0bbddb}, {0x0510e8, 0x0ed000, 0x00b780}, {0x009e8e, 0x07579e, 0x045fb6}, {0x02205c, 0x096000, 0x0fe9c0}, {0x0b908e, 0x0d3000, 0x01d5a0}, {0x07e0c5, 0x08b000, 0x0f52d0}, {0x037068, 0x0fb800, 0x035228}, {0x0380ee, 0x0b8200, 0x078fb6}, {0x0bb09c, 0x0afc00, 0x0c9b3c}, {0x09e055, 0x0f6500, 0x05eddb} },
	{ {0x0e7080, 0x04bf80, 0x065780}, {0x17b200, 0x024e00, 0x066600}, {0x202200, 0x029e00, 0x00d600}, {0x463c00, 0x04ac00, 0x056400}, {0x86f000, 0x043000, 0x04d000}, {0x031e80, 0x0d3d80, 0x00b580}, {0x047280, 0x120180, 0x02a180}, {0x06fe80, 0x255d80, 0x045580}, {0x071c00, 0x418c00, 0x064400}, {0x069e00, 0x86b200, 0x073200}, {0x05ec80, 0x01b380, 0x0e9380}, {0x02a200, 0x041e00, 0x145600}, {0x00e080, 0x036f80, 0x21e780}, {0x014e00, 0x07a200, 0x40c200}, {0x006e00, 0x028200, 0x83e200}, {0x067800, 0x075800, 0x07b800}, {0x01db00, 0x05e700, 0x03b900}, {0x027c40, 0x0564c0, 0x042a40}, {0x007e60, 0x05d820, 0x06d7a0}, {0x0686e8, 0x008788, 0x036028}, {0x0662dc, 0x0013d4, 0x045ebc}, {0x06a210, 0x0318b0, 0x055350}, {0x072945, 0x04b8ed, 0x052e5b}, {0x060e68, 0x03ed80, 0x000200}, {0x009e8e, 0x07579e, 0x045fb6}, {0x04d25c, 0x05ee00, 0x01cfc0}, {0x06fe8e, 0x04b200, 0x0737a0}, {0x0112c5, 0x043e00, 0x0174d0}, {0x006ee8, 0x028580, 0x03e7a8}, {0x009e6e, 0x06bf80, 0x073a36}, {0x03321c, 0x02cd80, 0x04eabc}, {0x048e55, 0x06e700, 0x030fdb} },
	{ {0x040440, 0x023cc0, 0x039240}, {0x080880, 0x03e780, 0x01ef80}, {0x101100, 0x00f100, 0x026700}, {0x202200, 0x029e00, 0x00d600}, {0x404400, 0x03f400, 0x02dc00}, {0x808800, 0x036800, 0x036800}, {0x01db00, 0x05e700, 0x03b900}, {0x02c580, 0x08da80, 0x030c80}, {0x0076c0, 0x103d40, 0x0133c0}, {0x008680, 0x220580, 0x03ed80}, {0x00bf00, 0x433300, 0x024500}, {0x00e600, 0x81ea00, 0x008a00}, {0x03a740, 0x0083c0, 0x079340}, {0x024f80, 0x030c80, 0x0a9280}, {0x00de40, 0x017ac0, 0x107c40}, {0x00e080, 0x036f80, 0x21e780}, {0x009500, 0x024500, 0x437b00}, {0x006e00, 0x028200, 0x83e200}, {0x020220, 0x00bce0, 0x02fde0}, {0x0282a8, 0x02bb48, 0x00f268}, {0x01c1dc, 0x02acd4, 0x005fbc}, {0x010110, 0x01a7b0, 0x015250}, {0x015145, 0x03e0ed, 0x02965b}, {0x020a28, 0x01d140, 0x039040}, {0x02e2ce, 0x02335e, 0x0075f6}, {0x010d1c, 0x0235c0, 0x01e480}, {0x00868e, 0x03ea00, 0x008fa0}, {0x00c9c5, 0x01d900, 0x02cdd0}, {0x006ee8, 0x028580, 0x03e7a8}, {0x02e22e, 0x03db40, 0x031076}, {0x00955c, 0x024e40, 0x0379fc}, {0x015115, 0x013cc0, 0x03249b} },
	{ {0x034374, 0x00179c, 0x00add4}, {0x0484c8, 0x003b68, 0x019dc8}, {0x09c95c, 0x014b54, 0x01b03c}, {0x115054, 0x005a7c, 0x003734}, {0x21e3dc, 0x0032d4, 0x0089bc}, {0x40c488, 0x01f3a8, 0x00d388}, {0x800888, 0x016fa8, 0x016788}, {0x01c1dc, 0x02acd4, 0x005fbc}, {0x009a54, 0x054c7c, 0x01e934}, {0x00c7a0, 0x086660, 0x01f160}, {0x0076c0, 0x103d40, 0x0133c0}, {0x000608, 0x200228, 0x01e208}, {0x003f88, 0x4134a8, 0x004a88}, {0x00e600, 0x81ea00, 0x008a00}, {0x014154, 0x00ab7c, 0x025034}, {0x01a560, 0x003f20, 0x056ea0}, {0x018c7c, 0x011cb4, 0x0830dc}, {0x00de40, 0x017ac0, 0x107c40}, {0x01215c, 0x01c354, 0x21b83c}, {0x001588, 0x0042a8, 0x417488}, {0x00ee88, 0x0085a8, 0x81ed88}, {0x010110, 0x01a7b0, 0x015250}, {0x01d1cd, 0x01e745, 0x0099d3}, {0x000808, 0x016da0, 0x016da0}, {0x006066, 0x008816, 0x00879e}, {0x00ccc0, 0x009914, 0x01bb3c}, {0x014752, 0x0146d4, 0x00d01c}, {0x018891, 0x01727c, 0x009de4}, {0x00ee60, 0x008228, 0x01e820}, {0x0121d2, 0x01cb74, 0x01b22a}, {0x0015d4, 0x0049e8, 0x017674}, {0x001041, 0x0197bc, 0x0174af} },
	{ {0x010918, 0x00ca10, 0x003ff0}, {0x024a6c, 0x00dd8c, 0x009224}, {0x045415, 0x007b9d, 0x00564b}, {0x08c84c, 0x00ece4, 0x00e26c}, {0x10594c, 0x00906c, 0x0008c4}, {0x20eac4, 0x00f8c4, 0x00b64c}, {0x401c5d, 0x00defd, 0x0075ab}, {0x800080, 0x000208, 0x000a28}, {0x00d8d5, 0x012d55, 0x00a623}, {0x00c8c4, 0x0266c4, 0x00604c}, {0x00925c, 0x0421dc, 0x008494}, {0x00177d, 0x082695, 0x003ae3}, {0x00a61d, 0x107db5, 0x00f843}, {0x00d6d5, 0x2042dd, 0x00298b}, {0x00e75d, 0x4019fd, 0x00ecab}, {0x003ed5, 0x80c755, 0x002c23}, {0x00d0dd, 0x0040f5, 0x01cb83}, {0x00484c, 0x00616c, 0x026fc4}, {0x007ca5, 0x00b5c5, 0x049ad3}, {0x005db1, 0x00fbf1, 0x08a90f}, {0x000695, 0x005795, 0x10da63}, {0x00204c, 0x0064e4, 0x20ea6c}, {0x00c555, 0x00025d, 0x40bf0b}, {0x003e55, 0x00c55d, 0x80260b}, {0x006066, 0x008816, 0x00879e}, {0x001c1d, 0x00d9e1, 0x0070bf}, {0x00969f, 0x00a191, 0x0049cf}, {0x00595c, 0x009539, 0x000437}, {0x003ebd, 0x00c2dd, 0x0023a3}, {0x0020c2, 0x006cc4, 0x00e07a}, {0x00c509, 0x00091d, 0x00bdf7}, {0x001849, 0x00fa1c, 0x00190f} },
	{ {0x008a82, 0x007870, 0x003970}, {0x011505, 0x0013f1, 0x004f4f}, {0x022a0a, 0x00559a, 0x0015ba}, {0x045415, 0x007b9d, 0x00564b}, {0x0822a8, 0x001c82, 0x005c82}, {0x104551, 0x00498d, 0x00787b}, {0x200020, 0x0008a2, 0x0008a2}, {0x400040, 0x00071c, 0x000514}, {0x800080, 0x000208, 0x000a28}, {0x001c1d, 0x00d9e1, 0x0070bf}, {0x002e2c, 0x0104d2, 0x006872}, {0x004246, 0x021eb4, 0x00593c}, {0x0064a5, 0x04085b, 0x004ac5}, {0x00177d, 0x082695, 0x003ae3}, {0x0050e4, 0x105432, 0x003612}, {0x005c57, 0x203aad, 0x0010fb}, {0x0011a4, 0x40307a, 0x0022fa}, {0x0022c8, 0x801eb4, 0x005c9c}, {0x007c7b, 0x0051f7, 0x00f721}, {0x002624, 0x006972, 0x0105d2}, {0x00484c, 0x00616c, 0x026fc4}, {0x001cc3, 0x003dd3, 0x041d4d}, {0x003dd7, 0x0073e7, 0x082e91}, {0x007aee, 0x000662, 0x102d42}, {0x005c37, 0x003513, 0x201d4d}, {0x0033ac, 0x002bda, 0x40715a}, {0x002248, 0x001cbc, 0x8056b4}, {0x004541, 0x004cd8, 0x007488}, {0x0022a0, 0x001b3c, 0x00531c}, {0x005cb9, 0x003d33, 0x00175b}, {0x0033f0, 0x00209a, 0x0073a6}, {0x000454, 0x0023fd, 0x0069b0} },
	{ {0x005cb9, 0x003d33, 0x00175b}, {0x00b1da, 0x0012a7, 0x0009bf}, {0x0137a5, 0x0008cd, 0x001c53}, {0x021152, 0x003f4d, 0x002575}, {0x041154, 0x003745, 0x0022c3}, {0x080008, 0x0007be, 0x000f9e}, {0x100010, 0x000555, 0x000cf3}, {0x200020, 0x0008a2, 0x0008a2}, {0x400040, 0x00071c, 0x000514}, {0x800080, 0x000208, 0x000a28}, {0x003b58, 0x006ad7, 0x0030cf}, {0x0005e5, 0x00a80a, 0x00136c}, {0x000c8c, 0x011fee, 0x003b6e}, {0x003c5f, 0x0238bb, 0x001d7b}, {0x001abc, 0x042e54, 0x000e82}, {0x00177d, 0x082695, 0x003ae3}, {0x003705, 0x1003d6, 0x001186}, {0x0000ee, 0x20079e, 0x0007a0}, {0x0011a4, 0x40307a, 0x0022fa}, {0x000068, 0x800588, 0x000f80}, {0x0022a0, 0x001b3c, 0x00531c}, {0x00393a, 0x001d2f, 0x0083a9}, {0x001d7c, 0x0003a5, 0x01351d}, {0x000d0d, 0x002db4, 0x021b4c}, {0x001cc3, 0x003dd3, 0x041d4d}, {0x00068f, 0x001930, 0x081e5e}, {0x002657, 0x003b51, 0x103a19}, {0x00008e, 0x000820, 0x200a16}, {0x00110c, 0x0030e6, 0x402246}, {0x0000e8, 0x000780, 0x8005a8}, {0x001150, 0x003ba6, 0x0020ba}, {0x0026f4, 0x0038c1, 0x003aac} }
};

const int32 FSobol::Cell3DGrayNumbers[FSobol::MaxCell3DBits + 1][32][3] = {
	{ {0x800000, 0x800000, 0x800000}, {0x400000, 0x400000, 0xc00000}, {0xd00000, 0x100000, 0x700000}, {0xb00000, 0x300000, 0x500000}, {0x580000, 0xc80000, 0xa80000}, {0xd60000, 0x6a0000, 0xd20000}, {0x8a0000, 0x1e0000, 0x0e0000}, {0x4f0000, 0x8d0000, 0x930000}, {0x278000, 0x558000, 0xc98000}, {0xbb4000, 0x70c000, 0xe64000}, {0x552000, 0x292000, 0x472000}, {0x00b000, 0xcff000, 0xb79000}, {0xc02c00, 0x7bfc00, 0xd85400}, {0xa0c200, 0xf9fe00, 0x593600}, {0x484280, 0xd97180, 0x7bb180}, {0xc82a80, 0xa17980, 0xa13980}, {0x587f80, 0x627c80, 0xe18280}, {0x04bf40, 0x333bc0, 0x524b40}, {0x8adf20, 0xc8d1e0, 0xa92ee0}, {0xe2b7c8, 0x685468, 0xd12cc8}, {0x7e2b94, 0xf91a3c, 0x4d27f4}, {0xbbbb04, 0x8cc30c, 0x909524}, {0xeeeec1, 0xa91861, 0xbd98ff}, {0x6eee29, 0xf19861, 0x1f1f7f}, {0x8000a7, 0x2a7fff, 0x4510c9}, {0x4000fb, 0xcf3fff, 0xb6d909}, {0x200075, 0xb6dfff, 0x6dbca9}, {0xb000b0, 0x000fff, 0x000e79}, {0x5800d8, 0x8007ff, 0x800c51}, {0xd60036, 0xa005ff, 0xa003e7}, {0x8a00aa, 0x6009ff, 0xe008db}, {0x4f00ff, 0x300cff, 0x500500} },
	{ {0x600000, 0x200000, 0x200000}, {0x080000, 0x580000, 0x580000}, {0x460000, 0x3a0000, 0x620000}, {0x5a0000, 0x0e0000, 0x7e0000}, {0x1f0000, 0x1d0000, 0x630000}, {0x678000, 0x158000, 0x098000}, {0x2b4000, 0x20c000, 0x564000}, {0x552000, 0x292000, 0x472000}, {0x50b000, 0x5ff000, 0x479000}, {0x502c00, 0x2bfc00, 0x685400}, {0x60c200, 0x39fe00, 0x193600}, {0x584280, 0x097180, 0x4bb180}, {0x482a80, 0x217980, 0x213980}, {0x187f80, 0x227c80, 0x218280}, {0x04bf40, 0x333bc0, 0x524b40}, {0x0adf20, 0x48d1e0, 0x292ee0}, {0x72b7c8, 0x385468, 0x612cc8}, {0x6e2b94, 0x291a3c, 0x7d27f4}, {0x3bbb04, 0x0cc30c, 0x109524}, {0x6eeec1, 0x291861, 0x3d98ff}, {0x7eee29, 0x219861, 0x2f1f7f}, {0x5000a7, 0x3a7fff, 0x3510c9}, {0x1000fb, 0x5f3fff, 0x46d909}, {0x300075, 0x66dfff, 0x5dbca9}, {0x6000b0, 0x100fff, 0x700e79}, {0x0800d8, 0x1007ff, 0x700c51}, {0x560036, 0x2005ff, 0x2003e7}, {0x1a00aa, 0x3009ff, 0x5008db}, {0x4f00ff, 0x300cff, 0x500500}, {0x43c03f, 0x140bbf, 0x3c0cc0}, {0x7b40bf, 0x7c043f, 0x340b40}, {0x5520df, 0x1e0e1f, 0x0e0ee0} },
	{ {0x1c0000, 0x340000, 0x1c0000}, {0x390000, 0x070000, 0x210000}, {0x078000, 0x358000, 0x298000}, {0x0d4000, 0x3ac000, 0x144000}, {0x132000, 0x132000, 0x252000}, {0x38b000, 0x27f000, 0x3f9000}, {0x162c00, 0x11fc00, 0x0a5400}, {0x00c200, 0x19fe00, 0x393600}, {0x1e4280, 0x337180, 0x29b180}, {0x282a80, 0x017980, 0x013980}, {0x187f80, 0x227c80, 0x218280}, {0x22bf40, 0x293bc0, 0x104b40}, {0x24df20, 0x0ad1e0, 0x332ee0}, {0x34b7c8, 0x025468, 0x032cc8}, {0x282b94, 0x131a3c, 0x1f27f4}, {0x3bbb04, 0x0cc30c, 0x109524}, {0x0eeec1, 0x091861, 0x1d98ff}, {0x1eee29, 0x019861, 0x0f1f7f}, {0x3000a7, 0x1a7fff, 0x1510c9}, {0x1800fb, 0x073fff, 0x1ed909}, {0x380075, 0x3edfff, 0x05bca9}, {0x2600b0, 0x2a0fff, 0x120e79}, {0x2e00d8, 0x0a07ff, 0x320c51}, {0x360036, 0x0005ff, 0x0003e7}, {0x3c00aa, 0x2a09ff, 0x1208db}, {0x0900ff, 0x0a0cff, 0x320500}, {0x23c03f, 0x340bbf, 0x1c0cc0}, {0x3540bf, 0x1e043f, 0x0e0b40}, {0x3520df, 0x3e0e1f, 0x2e0ee0}, {0x16b04f, 0x27072f, 0x010c30}, {0x36d8a7, 0x1f8aa7, 0x3b8618}, {0x0044fb, 0x30c8f3, 0x264924} },
	{ {0x114000, 0x0ec000, 0x084000}, {0x08a000, 0x12a000, 0x10a000}, {0x1db000, 0x14f000, 0x029000}, {0x162c00, 0x11fc00, 0x0a5400}, {0x1b4200, 0x187e00, 0x0cb600}, {0x19c280, 0x06f180, 0x003180}, {0x0aaa80, 0x07f980, 0x15b980}, {0x1fff80, 0x17fc80, 0x080280}, {0x1c3f40, 0x1bbbc0, 0x18cb40}, {0x1ddf20, 0x0dd1e0, 0x122ee0}, {0x1637c8, 0x04d468, 0x17acc8}, {0x0aab94, 0x159a3c, 0x0ba7f4}, {0x193b04, 0x0a430c, 0x041524}, {0x0eeec1, 0x091861, 0x1d98ff}, {0x1eee29, 0x019861, 0x0f1f7f}, {0x1280a7, 0x1cffff, 0x0190c9}, {0x1800fb, 0x073fff, 0x1ed909}, {0x068075, 0x0c5fff, 0x0d3ca9}, {0x1880b0, 0x188fff, 0x1a8e79}, {0x1700d8, 0x0d07ff, 0x130c51}, {0x148036, 0x0685ff, 0x1483e7}, {0x0280aa, 0x1889ff, 0x1a88db}, {0x1280ff, 0x0b8cff, 0x078500}, {0x1d403f, 0x068bbf, 0x148cc0}, {0x17c0bf, 0x18843f, 0x1a8b40}, {0x1020df, 0x0d0e1f, 0x130ee0}, {0x0ab04f, 0x13072f, 0x1d0c30}, {0x0fd8a7, 0x188aa7, 0x1a8618}, {0x07c4fb, 0x0548f3, 0x0fc924}, {0x1aaa75, 0x072d6d, 0x192492}, {0x057fb0, 0x0c7300, 0x181249}, {0x197f58, 0x18fc80, 0x041249} },
	{ {0x0b9c00, 0x050c00, 0x08c400}, {0x06f200, 0x0c8e00, 0x0e2600}, {0x088280, 0x083180, 0x087180}, {0x0efa80, 0x0f6980, 0x0fc980}, {0x024f80, 0x030c80, 0x0a9280}, {0x05df40, 0x07dbc0, 0x002b40}, {0x08cf20, 0x0b81e0, 0x001ee0}, {0x0327c8, 0x028468, 0x059cc8}, {0x065b94, 0x0faa3c, 0x0177f4}, {0x087b04, 0x04830c, 0x0c5524}, {0x0abec1, 0x018861, 0x07e8ff}, {0x0fae29, 0x0f5861, 0x075f7f}, {0x0f30a7, 0x080fff, 0x0300c9}, {0x0d10fb, 0x016fff, 0x0ce909}, {0x068075, 0x0c5fff, 0x0d3ca9}, {0x0160b0, 0x04efff, 0x026e79}, {0x0210d8, 0x0b57ff, 0x013c51}, {0x019036, 0x00d5ff, 0x06b3e7}, {0x0a20aa, 0x0a29ff, 0x0a28db}, {0x03c0ff, 0x054cff, 0x0fc500}, {0x08503f, 0x00dbbf, 0x06bcc0}, {0x0e20bf, 0x04e43f, 0x026b40}, {0x0530df, 0x0b5e1f, 0x013ee0}, {0x02104f, 0x01a72f, 0x0dac30}, {0x0778a7, 0x0a2aa7, 0x0a2618}, {0x07c4fb, 0x0548f3, 0x0fc924}, {0x0fba75, 0x017d6d, 0x0b1492}, {0x012fb0, 0x04e300, 0x026249}, {0x04cf58, 0x0c0c80, 0x068249}, {0x015f9d, 0x0f05b0, 0x063249}, {0x012fc1, 0x00f2f0, 0x026249}, {0x0f4f4f, 0x02f8d0, 0x030249} },
	{ {0x067800, 0x075800, 0x07b800}, {0x07a300, 0x02bf00, 0x040100}, {0x05df40, 0x07dbc0, 0x002b40}, {0x05a120, 0x0203e0, 0x06fce0}, {0x0327c8, 0x028468, 0x059cc8}, {0x054514, 0x0297bc, 0x01c274}, {0x03e704, 0x018f0c, 0x049124}, {0x04ce41, 0x0537e1, 0x01bf7f}, {0x02c029, 0x06da61, 0x01bd7f}, {0x025ea7, 0x018dff, 0x05e2c9}, {0x068cfb, 0x0463ff, 0x042d09}, {0x007275, 0x00d1ff, 0x031aa9}, {0x0160b0, 0x04efff, 0x026e79}, {0x010e58, 0x066a7f, 0x0189d1}, {0x019036, 0x00d5ff, 0x06b3e7}, {0x02a22a, 0x02187f, 0x02595b}, {0x062c7f, 0x04ff7f, 0x015680}, {0x0620bf, 0x04643f, 0x00eb40}, {0x00503f, 0x005bbf, 0x043cc0}, {0x062e5f, 0x06639f, 0x018b60}, {0x07fccf, 0x0014af, 0x033fb0}, {0x018aa7, 0x06a4a7, 0x040018}, {0x02287b, 0x04fb73, 0x015aa4}, {0x042675, 0x04716d, 0x03d092}, {0x012fb0, 0x04e300, 0x026249}, {0x07d1d8, 0x013100, 0x0637c9}, {0x02411d, 0x023830, 0x0687c9}, {0x012fc1, 0x00f2f0, 0x026249}, {0x013fcf, 0x064750, 0x0555c9}, {0x072727, 0x027558, 0x018a49}, {0x05cb3b, 0x07888c, 0x0419c9}, {0x0325d5, 0x046d12, 0x077bc9} },
	{ {0x020220, 0x00bce0, 0x02fde0}, {0x008088, 0x0207a8, 0x020f88}, {0x014154, 0x00ab7c, 0x025034}, {0x004044, 0x010ccc, 0x030264}, {0x011101, 0x02ec21, 0x01943f}, {0x031b29, 0x033d61, 0x02047f}, {0x01f9e7, 0x010e3f, 0x027189}, {0x00f4fb, 0x033bff, 0x039509}, {0x007275, 0x00d1ff, 0x031aa9}, {0x00bbb0, 0x0108ff, 0x01d779}, {0x00d558, 0x038d7f, 0x0230d1}, {0x023776, 0x00563f, 0x0120a7}, {0x02a22a, 0x02187f, 0x02595b}, {0x03f33f, 0x0324bf, 0x017dc0}, {0x03ffff, 0x03bfff, 0x00c000}, {0x03f77f, 0x00d87f, 0x03af80}, {0x03f11f, 0x01b85f, 0x01a020}, {0x03f88f, 0x02286f, 0x00adf0}, {0x03f6e7, 0x03c067, 0x002a58}, {0x03f37b, 0x011c73, 0x02e3a4}, {0x01f935, 0x03aaad, 0x03fbd2}, {0x00f4b0, 0x010400, 0x01db49}, {0x0072d8, 0x038e00, 0x0236c9}, {0x01e65d, 0x02bbf0, 0x011489}, {0x012fc1, 0x00f2f0, 0x026249}, {0x03438f, 0x032390, 0x017f89}, {0x032367, 0x004998, 0x021809}, {0x03b33b, 0x00d08c, 0x03a1c9}, {0x015995, 0x0109d2, 0x035189}, {0x000440, 0x03303f, 0x030509}, {0x020880, 0x0064ff, 0x037f49}, {0x030cc0, 0x001f7f, 0x01e4c9} },
	{ {0x010110, 0x01a7b0, 0x015250}, {0x00d0dd, 0x0040f5, 0x01cb83}, {0x00d8d5, 0x012d55, 0x00a623}, {0x00b8b3, 0x01a543, 0x0021bd}, {0x007473, 0x013c57, 0x019a81}, {0x013321, 0x007a83, 0x014a9d}, {0x00bbb0, 0x0108ff, 0x01d779}, {0x0055d0, 0x018ad7, 0x003f59}, {0x017402, 0x0041a3, 0x018d73}, {0x0161d6, 0x00084b, 0x00fb07}, {0x017197, 0x019ff7, 0x018fa8}, {0x017d57, 0x0104b7, 0x003268}, {0x01f55f, 0x00649f, 0x015260}, {0x00b26b, 0x01afc3, 0x010df4}, {0x017a27, 0x009327, 0x005f98}, {0x01744f, 0x017b2f, 0x00d830}, {0x01f15b, 0x01a093, 0x001e44}, {0x0179bd, 0x01ad05, 0x01f45a}, {0x00f4b0, 0x010400, 0x01db49}, {0x00f250, 0x0189a8, 0x003941}, {0x002781, 0x001724, 0x014b35}, {0x006e95, 0x00598c, 0x00327d}, {0x01c127, 0x0198d8, 0x018de1}, {0x012147, 0x00f578, 0x00e5e9}, {0x01b11b, 0x006c6c, 0x015c29}, {0x0018c1, 0x01a2ae, 0x0101bd}, {0x0084c8, 0x013797, 0x010a81}, {0x000aa0, 0x00d81f, 0x0182a9}, {0x004fb4, 0x0008e3, 0x01491d}, {0x00c734, 0x008543, 0x00233d}, {0x000bf4, 0x01c733, 0x009c2d}, {0x00ed1c, 0x002533, 0x00162d} },
	{ {0x006066, 0x008816, 0x00879e}, {0x007c7b, 0x0051f7, 0x00f721}, {0x00eae4, 0x00f066, 0x00beee}, {0x00b3b8, 0x00655f, 0x00bad9}, {0x008d05, 0x00a782, 0x00997a}, {0x00adc7, 0x00cb46, 0x007900}, {0x0068ce, 0x00c25b, 0x00c4f7}, {0x007087, 0x003847, 0x00ddf8}, {0x00ac9a, 0x00e3f2, 0x00abbb}, {0x002c9a, 0x00ee7a, 0x00a613}, {0x00ba63, 0x00c263, 0x006054}, {0x00733f, 0x005937, 0x006068}, {0x00a582, 0x009c6a, 0x0041e3}, {0x002096, 0x0047d6, 0x008797}, {0x0078ad, 0x000ab5, 0x00a60a}, {0x00fcb8, 0x0069a0, 0x00b6e9}, {0x002a85, 0x00a4fd, 0x009f62}, {0x00f75c, 0x0057d1, 0x0080b6}, {0x006e95, 0x00598c, 0x00327d}, {0x00c037, 0x003f68, 0x00dfb1}, {0x00285f, 0x003f68, 0x00da19}, {0x0068de, 0x00e689, 0x00a85a}, {0x0010c9, 0x00cf0e, 0x006c1d}, {0x008cc0, 0x005a37, 0x006721}, {0x00da7d, 0x0098ea, 0x00492a}, {0x009f69, 0x004816, 0x00829e}, {0x00c734, 0x008543, 0x00233d}, {0x00d321, 0x00ea66, 0x003a0e}, {0x00ed1c, 0x002533, 0x00162d}, {0x0034c8, 0x00f79b, 0x00d6a5}, {0x0082f5, 0x003f50, 0x0078b0}, {0x00c370, 0x005e18, 0x006c58} },
	{ {0x004541, 0x004cd8, 0x007488}, {0x0067e1, 0x0057e4, 0x002794}, {0x003b58, 0x006ad7, 0x0030cf}, {0x0008a8, 0x004a4d, 0x004369}, {0x000cfc, 0x0069b0, 0x002ad9}, {0x00467e, 0x001394, 0x001555}, {0x004cfc, 0x00666c, 0x00218d}, {0x002cfc, 0x0063f2, 0x00299b}, {0x00733f, 0x005937, 0x006068}, {0x00331d, 0x003dfb, 0x00082c}, {0x005ced, 0x001621, 0x0070b6}, {0x0004d6, 0x005b42, 0x00512b}, {0x000a41, 0x004027, 0x0078b8}, {0x004ae3, 0x002ceb, 0x0018fc}, {0x0001a5, 0x007e56, 0x004ee7}, {0x006e95, 0x00598c, 0x00327d}, {0x0036ce, 0x0016ef, 0x0011e0}, {0x005424, 0x006e9f, 0x002d38}, {0x0008b8, 0x006e9f, 0x002fc4}, {0x000cd4, 0x0016ef, 0x001ca2}, {0x000642, 0x002247, 0x005e51}, {0x004ce2, 0x00397b, 0x0000e5}, {0x006990, 0x006191, 0x004ccf}, {0x0051ab, 0x0024d2, 0x006af2}, {0x0045be, 0x004bf7, 0x0073c1}, {0x00679e, 0x005d43, 0x002f5d}, {0x0054ae, 0x007f8d, 0x00513b}, {0x000877, 0x004720, 0x0041c0}, {0x0049f2, 0x002668, 0x005528}, {0x006138, 0x004f2c, 0x003744}, {0x001816, 0x001ed2, 0x007992}, {0x002421, 0x002e5f, 0x006cc9} },
	{ {0x001150, 0x003ba6, 0x0020ba}, {0x0037a4, 0x000367, 0x001a16}, {0x001ac7, 0x002ea7, 0x00020e}, {0x002b1d, 0x003188, 0x000619}, {0x0017a4, 0x000925, 0x001954}, {0x00367e, 0x0015ef, 0x0014e0}, {0x00331d, 0x003dfb, 0x00082c}, {0x0022f4, 0x00302e, 0x0034f1}, {0x001d2e, 0x002aa9, 0x0032f8}, {0x0013b9, 0x0031cc, 0x001b6b}, {0x00165a, 0x0011d8, 0x000fa7}, {0x00185d, 0x000fbd, 0x002d34}, {0x000974, 0x000e68, 0x0015e9}, {0x0036ce, 0x0016ef, 0x0011e0}, {0x0033c5, 0x00397b, 0x000aac}, {0x0033e0, 0x000448, 0x001f0b}, {0x000cd4, 0x0016ef, 0x001ca2}, {0x0024e2, 0x00397b, 0x000d4d}, {0x00105b, 0x000448, 0x0017be}, {0x002cd1, 0x002d49, 0x003847}, {0x002fb2, 0x0002dd, 0x002eb5}, {0x0000ff, 0x00072f, 0x000749}, {0x00007f, 0x000aa7, 0x0008c9}, {0x0011ef, 0x003355, 0x0025b3}, {0x00118f, 0x0036cb, 0x002213}, {0x0037eb, 0x000067, 0x00116f}, {0x0006d9, 0x0018c8, 0x0010d0}, {0x003ab6, 0x0005ee, 0x002a8e}, {0x000681, 0x003563, 0x003fd5}, {0x00016a, 0x001d58, 0x0007c6}, {0x0035bb, 0x00286b, 0x0012b5}, {0x0009ad, 0x000d6a, 0x00308c} }
};

// static
uint16 FSobol::ComputeGPUSpatialSeed(int32 x, int32 y, int32 Index)
{
	check(x >= 0 && x < 16);
	check(y >= 0 && y < 16);

	uint16 Result = 0;
	if (Index == 0)
	{
		Result  = (x & 0x001) ? 0xf68e : 0;
		Result ^= (x & 0x002) ? 0x8e56 : 0;
		Result ^= (x & 0x004) ? 0x1135 : 0;
		Result ^= (x & 0x008) ? 0x220a : 0;
		Result ^= (y & 0x001) ? 0x94c4 : 0;
		Result ^= (y & 0x002) ? 0x4ac2 : 0;
		Result ^= (y & 0x004) ? 0xfb57 : 0;
		Result ^= (y & 0x008) ? 0x0454 : 0;
	}
	else if (Index == 1)
	{
		Result  = (x & 0x001) ? 0x4414 : 0;
		Result ^= (x & 0x002) ? 0x8828 : 0;
		Result ^= (x & 0x004) ? 0xe69e : 0;
		Result ^= (x & 0x008) ? 0xae76 : 0;
		Result ^= (y & 0x001) ? 0xa28a : 0;
		Result ^= (y & 0x002) ? 0x265e : 0;
		Result ^= (y & 0x004) ? 0xe69e : 0;
		Result ^= (y & 0x008) ? 0xae76 : 0;
	}
	else
	{
		check(0);
	}

	return Result;
}
